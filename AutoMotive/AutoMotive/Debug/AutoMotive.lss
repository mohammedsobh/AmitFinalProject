
AutoMotive.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000136e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000076  00800060  0000136e  00001402  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000021  008000d6  008000d6  00001478  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001478  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000014a8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000240  00000000  00000000  000014e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000031f1  00000000  00000000  00001724  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d99  00000000  00000000  00004915  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001b2a  00000000  00000000  000056ae  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000048c  00000000  00000000  000071d8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007ed  00000000  00000000  00007664  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001b7a  00000000  00000000  00007e51  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001c0  00000000  00000000  000099cb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 3b 09 	jmp	0x1276	; 0x1276 <__vector_9>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ee e6       	ldi	r30, 0x6E	; 110
      68:	f3 e1       	ldi	r31, 0x13	; 19
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a6 3d       	cpi	r26, 0xD6	; 214
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	20 e0       	ldi	r18, 0x00	; 0
      78:	a6 ed       	ldi	r26, 0xD6	; 214
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a7 3f       	cpi	r26, 0xF7	; 247
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 5e 03 	call	0x6bc	; 0x6bc <main>
      8a:	0c 94 b5 09 	jmp	0x136a	; 0x136a <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <DIO_SetPortDir>:
		case DIO_PORTD:
		value = get_bit(PIND,Pin);
		break;
	}
	return value;
}
      92:	66 23       	and	r22, r22
      94:	19 f0       	breq	.+6      	; 0x9c <DIO_SetPortDir+0xa>
      96:	6f 3f       	cpi	r22, 0xFF	; 255
      98:	89 f0       	breq	.+34     	; 0xbc <DIO_SetPortDir+0x2a>
      9a:	08 95       	ret
      9c:	81 30       	cpi	r24, 0x01	; 1
      9e:	41 f0       	breq	.+16     	; 0xb0 <DIO_SetPortDir+0x1e>
      a0:	28 f0       	brcs	.+10     	; 0xac <DIO_SetPortDir+0x1a>
      a2:	82 30       	cpi	r24, 0x02	; 2
      a4:	39 f0       	breq	.+14     	; 0xb4 <DIO_SetPortDir+0x22>
      a6:	83 30       	cpi	r24, 0x03	; 3
      a8:	39 f0       	breq	.+14     	; 0xb8 <DIO_SetPortDir+0x26>
      aa:	08 95       	ret
      ac:	1a ba       	out	0x1a, r1	; 26
      ae:	08 95       	ret
      b0:	17 ba       	out	0x17, r1	; 23
      b2:	08 95       	ret
      b4:	14 ba       	out	0x14, r1	; 20
      b6:	08 95       	ret
      b8:	11 ba       	out	0x11, r1	; 17
      ba:	08 95       	ret
      bc:	81 30       	cpi	r24, 0x01	; 1
      be:	49 f0       	breq	.+18     	; 0xd2 <DIO_SetPortDir+0x40>
      c0:	28 f0       	brcs	.+10     	; 0xcc <DIO_SetPortDir+0x3a>
      c2:	82 30       	cpi	r24, 0x02	; 2
      c4:	49 f0       	breq	.+18     	; 0xd8 <DIO_SetPortDir+0x46>
      c6:	83 30       	cpi	r24, 0x03	; 3
      c8:	51 f0       	breq	.+20     	; 0xde <DIO_SetPortDir+0x4c>
      ca:	08 95       	ret
      cc:	8f ef       	ldi	r24, 0xFF	; 255
      ce:	8a bb       	out	0x1a, r24	; 26
      d0:	08 95       	ret
      d2:	8f ef       	ldi	r24, 0xFF	; 255
      d4:	87 bb       	out	0x17, r24	; 23
      d6:	08 95       	ret
      d8:	8f ef       	ldi	r24, 0xFF	; 255
      da:	84 bb       	out	0x14, r24	; 20
      dc:	08 95       	ret
      de:	8f ef       	ldi	r24, 0xFF	; 255
      e0:	81 bb       	out	0x11, r24	; 17
      e2:	08 95       	ret

000000e4 <DIO_SetPinDir>:
      e4:	44 23       	and	r20, r20
      e6:	b9 f1       	breq	.+110    	; 0x156 <DIO_SetPinDir+0x72>
      e8:	41 30       	cpi	r20, 0x01	; 1
      ea:	09 f0       	breq	.+2      	; 0xee <DIO_SetPinDir+0xa>
      ec:	6b c0       	rjmp	.+214    	; 0x1c4 <DIO_SetPinDir+0xe0>
      ee:	81 30       	cpi	r24, 0x01	; 1
      f0:	89 f0       	breq	.+34     	; 0x114 <DIO_SetPinDir+0x30>
      f2:	28 f0       	brcs	.+10     	; 0xfe <DIO_SetPinDir+0x1a>
      f4:	82 30       	cpi	r24, 0x02	; 2
      f6:	c9 f0       	breq	.+50     	; 0x12a <DIO_SetPinDir+0x46>
      f8:	83 30       	cpi	r24, 0x03	; 3
      fa:	11 f1       	breq	.+68     	; 0x140 <DIO_SetPinDir+0x5c>
      fc:	08 95       	ret
      fe:	2a b3       	in	r18, 0x1a	; 26
     100:	81 e0       	ldi	r24, 0x01	; 1
     102:	90 e0       	ldi	r25, 0x00	; 0
     104:	02 c0       	rjmp	.+4      	; 0x10a <DIO_SetPinDir+0x26>
     106:	88 0f       	add	r24, r24
     108:	99 1f       	adc	r25, r25
     10a:	6a 95       	dec	r22
     10c:	e2 f7       	brpl	.-8      	; 0x106 <DIO_SetPinDir+0x22>
     10e:	82 2b       	or	r24, r18
     110:	8a bb       	out	0x1a, r24	; 26
     112:	08 95       	ret
     114:	27 b3       	in	r18, 0x17	; 23
     116:	81 e0       	ldi	r24, 0x01	; 1
     118:	90 e0       	ldi	r25, 0x00	; 0
     11a:	02 c0       	rjmp	.+4      	; 0x120 <DIO_SetPinDir+0x3c>
     11c:	88 0f       	add	r24, r24
     11e:	99 1f       	adc	r25, r25
     120:	6a 95       	dec	r22
     122:	e2 f7       	brpl	.-8      	; 0x11c <DIO_SetPinDir+0x38>
     124:	82 2b       	or	r24, r18
     126:	87 bb       	out	0x17, r24	; 23
     128:	08 95       	ret
     12a:	24 b3       	in	r18, 0x14	; 20
     12c:	81 e0       	ldi	r24, 0x01	; 1
     12e:	90 e0       	ldi	r25, 0x00	; 0
     130:	02 c0       	rjmp	.+4      	; 0x136 <DIO_SetPinDir+0x52>
     132:	88 0f       	add	r24, r24
     134:	99 1f       	adc	r25, r25
     136:	6a 95       	dec	r22
     138:	e2 f7       	brpl	.-8      	; 0x132 <DIO_SetPinDir+0x4e>
     13a:	82 2b       	or	r24, r18
     13c:	84 bb       	out	0x14, r24	; 20
     13e:	08 95       	ret
     140:	21 b3       	in	r18, 0x11	; 17
     142:	81 e0       	ldi	r24, 0x01	; 1
     144:	90 e0       	ldi	r25, 0x00	; 0
     146:	02 c0       	rjmp	.+4      	; 0x14c <DIO_SetPinDir+0x68>
     148:	88 0f       	add	r24, r24
     14a:	99 1f       	adc	r25, r25
     14c:	6a 95       	dec	r22
     14e:	e2 f7       	brpl	.-8      	; 0x148 <DIO_SetPinDir+0x64>
     150:	82 2b       	or	r24, r18
     152:	81 bb       	out	0x11, r24	; 17
     154:	08 95       	ret
     156:	81 30       	cpi	r24, 0x01	; 1
     158:	91 f0       	breq	.+36     	; 0x17e <DIO_SetPinDir+0x9a>
     15a:	28 f0       	brcs	.+10     	; 0x166 <DIO_SetPinDir+0x82>
     15c:	82 30       	cpi	r24, 0x02	; 2
     15e:	d9 f0       	breq	.+54     	; 0x196 <DIO_SetPinDir+0xb2>
     160:	83 30       	cpi	r24, 0x03	; 3
     162:	29 f1       	breq	.+74     	; 0x1ae <DIO_SetPinDir+0xca>
     164:	08 95       	ret
     166:	2a b3       	in	r18, 0x1a	; 26
     168:	81 e0       	ldi	r24, 0x01	; 1
     16a:	90 e0       	ldi	r25, 0x00	; 0
     16c:	02 c0       	rjmp	.+4      	; 0x172 <DIO_SetPinDir+0x8e>
     16e:	88 0f       	add	r24, r24
     170:	99 1f       	adc	r25, r25
     172:	6a 95       	dec	r22
     174:	e2 f7       	brpl	.-8      	; 0x16e <DIO_SetPinDir+0x8a>
     176:	80 95       	com	r24
     178:	82 23       	and	r24, r18
     17a:	8a bb       	out	0x1a, r24	; 26
     17c:	08 95       	ret
     17e:	27 b3       	in	r18, 0x17	; 23
     180:	81 e0       	ldi	r24, 0x01	; 1
     182:	90 e0       	ldi	r25, 0x00	; 0
     184:	02 c0       	rjmp	.+4      	; 0x18a <DIO_SetPinDir+0xa6>
     186:	88 0f       	add	r24, r24
     188:	99 1f       	adc	r25, r25
     18a:	6a 95       	dec	r22
     18c:	e2 f7       	brpl	.-8      	; 0x186 <DIO_SetPinDir+0xa2>
     18e:	80 95       	com	r24
     190:	82 23       	and	r24, r18
     192:	87 bb       	out	0x17, r24	; 23
     194:	08 95       	ret
     196:	24 b3       	in	r18, 0x14	; 20
     198:	81 e0       	ldi	r24, 0x01	; 1
     19a:	90 e0       	ldi	r25, 0x00	; 0
     19c:	02 c0       	rjmp	.+4      	; 0x1a2 <DIO_SetPinDir+0xbe>
     19e:	88 0f       	add	r24, r24
     1a0:	99 1f       	adc	r25, r25
     1a2:	6a 95       	dec	r22
     1a4:	e2 f7       	brpl	.-8      	; 0x19e <DIO_SetPinDir+0xba>
     1a6:	80 95       	com	r24
     1a8:	82 23       	and	r24, r18
     1aa:	84 bb       	out	0x14, r24	; 20
     1ac:	08 95       	ret
     1ae:	21 b3       	in	r18, 0x11	; 17
     1b0:	81 e0       	ldi	r24, 0x01	; 1
     1b2:	90 e0       	ldi	r25, 0x00	; 0
     1b4:	02 c0       	rjmp	.+4      	; 0x1ba <DIO_SetPinDir+0xd6>
     1b6:	88 0f       	add	r24, r24
     1b8:	99 1f       	adc	r25, r25
     1ba:	6a 95       	dec	r22
     1bc:	e2 f7       	brpl	.-8      	; 0x1b6 <DIO_SetPinDir+0xd2>
     1be:	80 95       	com	r24
     1c0:	82 23       	and	r24, r18
     1c2:	81 bb       	out	0x11, r24	; 17
     1c4:	08 95       	ret

000001c6 <DIO_SetPortVal>:
     1c6:	81 30       	cpi	r24, 0x01	; 1
     1c8:	41 f0       	breq	.+16     	; 0x1da <DIO_SetPortVal+0x14>
     1ca:	28 f0       	brcs	.+10     	; 0x1d6 <DIO_SetPortVal+0x10>
     1cc:	82 30       	cpi	r24, 0x02	; 2
     1ce:	39 f0       	breq	.+14     	; 0x1de <DIO_SetPortVal+0x18>
     1d0:	83 30       	cpi	r24, 0x03	; 3
     1d2:	39 f0       	breq	.+14     	; 0x1e2 <DIO_SetPortVal+0x1c>
     1d4:	08 95       	ret
     1d6:	6b bb       	out	0x1b, r22	; 27
     1d8:	08 95       	ret
     1da:	68 bb       	out	0x18, r22	; 24
     1dc:	08 95       	ret
     1de:	65 bb       	out	0x15, r22	; 21
     1e0:	08 95       	ret
     1e2:	62 bb       	out	0x12, r22	; 18
     1e4:	08 95       	ret

000001e6 <DIO_SetPinVal>:
     1e6:	44 23       	and	r20, r20
     1e8:	b9 f1       	breq	.+110    	; 0x258 <DIO_SetPinVal+0x72>
     1ea:	41 30       	cpi	r20, 0x01	; 1
     1ec:	09 f0       	breq	.+2      	; 0x1f0 <DIO_SetPinVal+0xa>
     1ee:	6b c0       	rjmp	.+214    	; 0x2c6 <DIO_SetPinVal+0xe0>
     1f0:	81 30       	cpi	r24, 0x01	; 1
     1f2:	89 f0       	breq	.+34     	; 0x216 <DIO_SetPinVal+0x30>
     1f4:	28 f0       	brcs	.+10     	; 0x200 <DIO_SetPinVal+0x1a>
     1f6:	82 30       	cpi	r24, 0x02	; 2
     1f8:	c9 f0       	breq	.+50     	; 0x22c <DIO_SetPinVal+0x46>
     1fa:	83 30       	cpi	r24, 0x03	; 3
     1fc:	11 f1       	breq	.+68     	; 0x242 <DIO_SetPinVal+0x5c>
     1fe:	08 95       	ret
     200:	2b b3       	in	r18, 0x1b	; 27
     202:	81 e0       	ldi	r24, 0x01	; 1
     204:	90 e0       	ldi	r25, 0x00	; 0
     206:	02 c0       	rjmp	.+4      	; 0x20c <DIO_SetPinVal+0x26>
     208:	88 0f       	add	r24, r24
     20a:	99 1f       	adc	r25, r25
     20c:	6a 95       	dec	r22
     20e:	e2 f7       	brpl	.-8      	; 0x208 <DIO_SetPinVal+0x22>
     210:	82 2b       	or	r24, r18
     212:	8b bb       	out	0x1b, r24	; 27
     214:	08 95       	ret
     216:	28 b3       	in	r18, 0x18	; 24
     218:	81 e0       	ldi	r24, 0x01	; 1
     21a:	90 e0       	ldi	r25, 0x00	; 0
     21c:	02 c0       	rjmp	.+4      	; 0x222 <DIO_SetPinVal+0x3c>
     21e:	88 0f       	add	r24, r24
     220:	99 1f       	adc	r25, r25
     222:	6a 95       	dec	r22
     224:	e2 f7       	brpl	.-8      	; 0x21e <DIO_SetPinVal+0x38>
     226:	82 2b       	or	r24, r18
     228:	88 bb       	out	0x18, r24	; 24
     22a:	08 95       	ret
     22c:	25 b3       	in	r18, 0x15	; 21
     22e:	81 e0       	ldi	r24, 0x01	; 1
     230:	90 e0       	ldi	r25, 0x00	; 0
     232:	02 c0       	rjmp	.+4      	; 0x238 <DIO_SetPinVal+0x52>
     234:	88 0f       	add	r24, r24
     236:	99 1f       	adc	r25, r25
     238:	6a 95       	dec	r22
     23a:	e2 f7       	brpl	.-8      	; 0x234 <DIO_SetPinVal+0x4e>
     23c:	82 2b       	or	r24, r18
     23e:	85 bb       	out	0x15, r24	; 21
     240:	08 95       	ret
     242:	22 b3       	in	r18, 0x12	; 18
     244:	81 e0       	ldi	r24, 0x01	; 1
     246:	90 e0       	ldi	r25, 0x00	; 0
     248:	02 c0       	rjmp	.+4      	; 0x24e <DIO_SetPinVal+0x68>
     24a:	88 0f       	add	r24, r24
     24c:	99 1f       	adc	r25, r25
     24e:	6a 95       	dec	r22
     250:	e2 f7       	brpl	.-8      	; 0x24a <DIO_SetPinVal+0x64>
     252:	82 2b       	or	r24, r18
     254:	82 bb       	out	0x12, r24	; 18
     256:	08 95       	ret
     258:	81 30       	cpi	r24, 0x01	; 1
     25a:	91 f0       	breq	.+36     	; 0x280 <DIO_SetPinVal+0x9a>
     25c:	28 f0       	brcs	.+10     	; 0x268 <DIO_SetPinVal+0x82>
     25e:	82 30       	cpi	r24, 0x02	; 2
     260:	d9 f0       	breq	.+54     	; 0x298 <DIO_SetPinVal+0xb2>
     262:	83 30       	cpi	r24, 0x03	; 3
     264:	29 f1       	breq	.+74     	; 0x2b0 <DIO_SetPinVal+0xca>
     266:	08 95       	ret
     268:	2b b3       	in	r18, 0x1b	; 27
     26a:	81 e0       	ldi	r24, 0x01	; 1
     26c:	90 e0       	ldi	r25, 0x00	; 0
     26e:	02 c0       	rjmp	.+4      	; 0x274 <DIO_SetPinVal+0x8e>
     270:	88 0f       	add	r24, r24
     272:	99 1f       	adc	r25, r25
     274:	6a 95       	dec	r22
     276:	e2 f7       	brpl	.-8      	; 0x270 <DIO_SetPinVal+0x8a>
     278:	80 95       	com	r24
     27a:	82 23       	and	r24, r18
     27c:	8b bb       	out	0x1b, r24	; 27
     27e:	08 95       	ret
     280:	28 b3       	in	r18, 0x18	; 24
     282:	81 e0       	ldi	r24, 0x01	; 1
     284:	90 e0       	ldi	r25, 0x00	; 0
     286:	02 c0       	rjmp	.+4      	; 0x28c <DIO_SetPinVal+0xa6>
     288:	88 0f       	add	r24, r24
     28a:	99 1f       	adc	r25, r25
     28c:	6a 95       	dec	r22
     28e:	e2 f7       	brpl	.-8      	; 0x288 <DIO_SetPinVal+0xa2>
     290:	80 95       	com	r24
     292:	82 23       	and	r24, r18
     294:	88 bb       	out	0x18, r24	; 24
     296:	08 95       	ret
     298:	25 b3       	in	r18, 0x15	; 21
     29a:	81 e0       	ldi	r24, 0x01	; 1
     29c:	90 e0       	ldi	r25, 0x00	; 0
     29e:	02 c0       	rjmp	.+4      	; 0x2a4 <DIO_SetPinVal+0xbe>
     2a0:	88 0f       	add	r24, r24
     2a2:	99 1f       	adc	r25, r25
     2a4:	6a 95       	dec	r22
     2a6:	e2 f7       	brpl	.-8      	; 0x2a0 <DIO_SetPinVal+0xba>
     2a8:	80 95       	com	r24
     2aa:	82 23       	and	r24, r18
     2ac:	85 bb       	out	0x15, r24	; 21
     2ae:	08 95       	ret
     2b0:	22 b3       	in	r18, 0x12	; 18
     2b2:	81 e0       	ldi	r24, 0x01	; 1
     2b4:	90 e0       	ldi	r25, 0x00	; 0
     2b6:	02 c0       	rjmp	.+4      	; 0x2bc <DIO_SetPinVal+0xd6>
     2b8:	88 0f       	add	r24, r24
     2ba:	99 1f       	adc	r25, r25
     2bc:	6a 95       	dec	r22
     2be:	e2 f7       	brpl	.-8      	; 0x2b8 <DIO_SetPinVal+0xd2>
     2c0:	80 95       	com	r24
     2c2:	82 23       	and	r24, r18
     2c4:	82 bb       	out	0x12, r24	; 18
     2c6:	08 95       	ret

000002c8 <DIO_SetPullUp>:

void DIO_SetPullUp(Uint8 Port,Uint8 Pin)
{
	switch(Port)
     2c8:	81 30       	cpi	r24, 0x01	; 1
     2ca:	b1 f0       	breq	.+44     	; 0x2f8 <DIO_SetPullUp+0x30>
     2cc:	28 f0       	brcs	.+10     	; 0x2d8 <DIO_SetPullUp+0x10>
     2ce:	82 30       	cpi	r24, 0x02	; 2
     2d0:	19 f1       	breq	.+70     	; 0x318 <DIO_SetPullUp+0x50>
     2d2:	83 30       	cpi	r24, 0x03	; 3
     2d4:	89 f1       	breq	.+98     	; 0x338 <DIO_SetPullUp+0x70>
     2d6:	08 95       	ret
	{
		case DIO_PORTA:
		clr_bit(DDRA,Pin);
     2d8:	2a b3       	in	r18, 0x1a	; 26
     2da:	81 e0       	ldi	r24, 0x01	; 1
     2dc:	90 e0       	ldi	r25, 0x00	; 0
     2de:	02 c0       	rjmp	.+4      	; 0x2e4 <DIO_SetPullUp+0x1c>
     2e0:	88 0f       	add	r24, r24
     2e2:	99 1f       	adc	r25, r25
     2e4:	6a 95       	dec	r22
     2e6:	e2 f7       	brpl	.-8      	; 0x2e0 <DIO_SetPullUp+0x18>
     2e8:	98 2f       	mov	r25, r24
     2ea:	90 95       	com	r25
     2ec:	92 23       	and	r25, r18
     2ee:	9a bb       	out	0x1a, r25	; 26
		set_bit(PORTA,Pin);
     2f0:	9b b3       	in	r25, 0x1b	; 27
     2f2:	89 2b       	or	r24, r25
     2f4:	8b bb       	out	0x1b, r24	; 27
		break;
     2f6:	08 95       	ret
		case DIO_PORTB:
		clr_bit(DDRB,Pin);
     2f8:	27 b3       	in	r18, 0x17	; 23
     2fa:	81 e0       	ldi	r24, 0x01	; 1
     2fc:	90 e0       	ldi	r25, 0x00	; 0
     2fe:	02 c0       	rjmp	.+4      	; 0x304 <DIO_SetPullUp+0x3c>
     300:	88 0f       	add	r24, r24
     302:	99 1f       	adc	r25, r25
     304:	6a 95       	dec	r22
     306:	e2 f7       	brpl	.-8      	; 0x300 <DIO_SetPullUp+0x38>
     308:	98 2f       	mov	r25, r24
     30a:	90 95       	com	r25
     30c:	92 23       	and	r25, r18
     30e:	97 bb       	out	0x17, r25	; 23
		set_bit(PORTB,Pin);
     310:	98 b3       	in	r25, 0x18	; 24
     312:	89 2b       	or	r24, r25
     314:	88 bb       	out	0x18, r24	; 24
		break;
     316:	08 95       	ret
		case DIO_PORTC:
		clr_bit(DDRC,Pin);
     318:	24 b3       	in	r18, 0x14	; 20
     31a:	81 e0       	ldi	r24, 0x01	; 1
     31c:	90 e0       	ldi	r25, 0x00	; 0
     31e:	02 c0       	rjmp	.+4      	; 0x324 <DIO_SetPullUp+0x5c>
     320:	88 0f       	add	r24, r24
     322:	99 1f       	adc	r25, r25
     324:	6a 95       	dec	r22
     326:	e2 f7       	brpl	.-8      	; 0x320 <DIO_SetPullUp+0x58>
     328:	98 2f       	mov	r25, r24
     32a:	90 95       	com	r25
     32c:	92 23       	and	r25, r18
     32e:	94 bb       	out	0x14, r25	; 20
		set_bit(PORTC,Pin);
     330:	95 b3       	in	r25, 0x15	; 21
     332:	89 2b       	or	r24, r25
     334:	85 bb       	out	0x15, r24	; 21
		break;
     336:	08 95       	ret
		case DIO_PORTD:
		clr_bit(DDRD,Pin);
     338:	21 b3       	in	r18, 0x11	; 17
     33a:	81 e0       	ldi	r24, 0x01	; 1
     33c:	90 e0       	ldi	r25, 0x00	; 0
     33e:	02 c0       	rjmp	.+4      	; 0x344 <DIO_SetPullUp+0x7c>
     340:	88 0f       	add	r24, r24
     342:	99 1f       	adc	r25, r25
     344:	6a 95       	dec	r22
     346:	e2 f7       	brpl	.-8      	; 0x340 <DIO_SetPullUp+0x78>
     348:	98 2f       	mov	r25, r24
     34a:	90 95       	com	r25
     34c:	92 23       	and	r25, r18
     34e:	91 bb       	out	0x11, r25	; 17
		set_bit(PORTD,Pin);
     350:	92 b3       	in	r25, 0x12	; 18
     352:	89 2b       	or	r24, r25
     354:	82 bb       	out	0x12, r24	; 18
     356:	08 95       	ret

00000358 <IRInit>:
 *  Author: eng_s
 */
#include "IR.h"
void IRInit(void)
{
	DIO_SetPinDir(IR_PORT,FRONT_IR_PIN,DIO_PIN_DIR_INPUT);
     358:	40 e0       	ldi	r20, 0x00	; 0
     35a:	62 e0       	ldi	r22, 0x02	; 2
     35c:	83 e0       	ldi	r24, 0x03	; 3
     35e:	0e 94 72 00 	call	0xe4	; 0xe4 <DIO_SetPinDir>
	DIO_SetPinDir(IR_PORT,BACK_IR_PIN,DIO_PIN_DIR_INPUT);
     362:	40 e0       	ldi	r20, 0x00	; 0
     364:	63 e0       	ldi	r22, 0x03	; 3
     366:	83 e0       	ldi	r24, 0x03	; 3
     368:	0e 94 72 00 	call	0xe4	; 0xe4 <DIO_SetPinDir>
	GICR  = 1<<INT0_EN  | 1<<INT1_EN;		/* Enable INT0 & INT1*/
     36c:	80 ec       	ldi	r24, 0xC0	; 192
     36e:	8b bf       	out	0x3b, r24	; 59
	MCUCR = 1<<INT0_RISINGEDGE_EN0 | 1<<INT0_RISINGEDGE_EN1 | 1<<INT1_RISINGEDGE_EN0 | 1<<INT1_RISINGEDGE_EN1;  // Trigger INT0 & INT1 on rising edge */
     370:	8f e0       	ldi	r24, 0x0F	; 15
     372:	85 bf       	out	0x35, r24	; 53
     374:	08 95       	ret

00000376 <LCDEN>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     376:	cf 93       	push	r28
     378:	df 93       	push	r29
     37a:	ec 01       	movw	r28, r24
     37c:	41 e0       	ldi	r20, 0x01	; 1
     37e:	6c 81       	ldd	r22, Y+4	; 0x04
     380:	89 81       	ldd	r24, Y+1	; 0x01
     382:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
     386:	8f e8       	ldi	r24, 0x8F	; 143
     388:	91 e0       	ldi	r25, 0x01	; 1
     38a:	01 97       	sbiw	r24, 0x01	; 1
     38c:	f1 f7       	brne	.-4      	; 0x38a <LCDEN+0x14>
     38e:	00 c0       	rjmp	.+0      	; 0x390 <LCDEN+0x1a>
     390:	00 00       	nop
     392:	40 e0       	ldi	r20, 0x00	; 0
     394:	6c 81       	ldd	r22, Y+4	; 0x04
     396:	89 81       	ldd	r24, Y+1	; 0x01
     398:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
     39c:	8f e8       	ldi	r24, 0x8F	; 143
     39e:	91 e0       	ldi	r25, 0x01	; 1
     3a0:	01 97       	sbiw	r24, 0x01	; 1
     3a2:	f1 f7       	brne	.-4      	; 0x3a0 <LCDEN+0x2a>
     3a4:	00 c0       	rjmp	.+0      	; 0x3a6 <LCDEN+0x30>
     3a6:	00 00       	nop
     3a8:	df 91       	pop	r29
     3aa:	cf 91       	pop	r28
     3ac:	08 95       	ret

000003ae <PortWrite>:
     3ae:	1f 93       	push	r17
     3b0:	cf 93       	push	r28
     3b2:	df 93       	push	r29
     3b4:	ec 01       	movw	r28, r24
     3b6:	16 2f       	mov	r17, r22
     3b8:	88 81       	ld	r24, Y
     3ba:	81 11       	cpse	r24, r1
     3bc:	35 c0       	rjmp	.+106    	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
     3be:	60 ff       	sbrs	r22, 0
     3c0:	06 c0       	rjmp	.+12     	; 0x3ce <PortWrite+0x20>
     3c2:	41 e0       	ldi	r20, 0x01	; 1
     3c4:	6e 81       	ldd	r22, Y+6	; 0x06
     3c6:	8d 81       	ldd	r24, Y+5	; 0x05
     3c8:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
     3cc:	05 c0       	rjmp	.+10     	; 0x3d8 <PortWrite+0x2a>
     3ce:	40 e0       	ldi	r20, 0x00	; 0
     3d0:	6e 81       	ldd	r22, Y+6	; 0x06
     3d2:	8d 81       	ldd	r24, Y+5	; 0x05
     3d4:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
     3d8:	11 ff       	sbrs	r17, 1
     3da:	06 c0       	rjmp	.+12     	; 0x3e8 <PortWrite+0x3a>
     3dc:	41 e0       	ldi	r20, 0x01	; 1
     3de:	6f 81       	ldd	r22, Y+7	; 0x07
     3e0:	8d 81       	ldd	r24, Y+5	; 0x05
     3e2:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
     3e6:	05 c0       	rjmp	.+10     	; 0x3f2 <PortWrite+0x44>
     3e8:	40 e0       	ldi	r20, 0x00	; 0
     3ea:	6f 81       	ldd	r22, Y+7	; 0x07
     3ec:	8d 81       	ldd	r24, Y+5	; 0x05
     3ee:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
     3f2:	12 ff       	sbrs	r17, 2
     3f4:	06 c0       	rjmp	.+12     	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
     3f6:	41 e0       	ldi	r20, 0x01	; 1
     3f8:	68 85       	ldd	r22, Y+8	; 0x08
     3fa:	8d 81       	ldd	r24, Y+5	; 0x05
     3fc:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
     400:	05 c0       	rjmp	.+10     	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
     402:	40 e0       	ldi	r20, 0x00	; 0
     404:	68 85       	ldd	r22, Y+8	; 0x08
     406:	8d 81       	ldd	r24, Y+5	; 0x05
     408:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
     40c:	13 ff       	sbrs	r17, 3
     40e:	06 c0       	rjmp	.+12     	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
     410:	41 e0       	ldi	r20, 0x01	; 1
     412:	69 85       	ldd	r22, Y+9	; 0x09
     414:	8d 81       	ldd	r24, Y+5	; 0x05
     416:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
     41a:	09 c0       	rjmp	.+18     	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
     41c:	40 e0       	ldi	r20, 0x00	; 0
     41e:	69 85       	ldd	r22, Y+9	; 0x09
     420:	8d 81       	ldd	r24, Y+5	; 0x05
     422:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
     426:	03 c0       	rjmp	.+6      	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
     428:	8d 81       	ldd	r24, Y+5	; 0x05
     42a:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <DIO_SetPortVal>
     42e:	df 91       	pop	r29
     430:	cf 91       	pop	r28
     432:	1f 91       	pop	r17
     434:	08 95       	ret

00000436 <cmd>:
     436:	1f 93       	push	r17
     438:	cf 93       	push	r28
     43a:	df 93       	push	r29
     43c:	ec 01       	movw	r28, r24
     43e:	16 2f       	mov	r17, r22
     440:	40 e0       	ldi	r20, 0x00	; 0
     442:	6a 81       	ldd	r22, Y+2	; 0x02
     444:	89 81       	ldd	r24, Y+1	; 0x01
     446:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
     44a:	88 81       	ld	r24, Y
     44c:	81 11       	cpse	r24, r1
     44e:	12 c0       	rjmp	.+36     	; 0x474 <cmd+0x3e>
     450:	61 2f       	mov	r22, r17
     452:	62 95       	swap	r22
     454:	6f 70       	andi	r22, 0x0F	; 15
     456:	ce 01       	movw	r24, r28
     458:	0e 94 d7 01 	call	0x3ae	; 0x3ae <PortWrite>
     45c:	ce 01       	movw	r24, r28
     45e:	0e 94 bb 01 	call	0x376	; 0x376 <LCDEN>
     462:	61 2f       	mov	r22, r17
     464:	6f 70       	andi	r22, 0x0F	; 15
     466:	ce 01       	movw	r24, r28
     468:	0e 94 d7 01 	call	0x3ae	; 0x3ae <PortWrite>
     46c:	ce 01       	movw	r24, r28
     46e:	0e 94 bb 01 	call	0x376	; 0x376 <LCDEN>
     472:	07 c0       	rjmp	.+14     	; 0x482 <cmd+0x4c>
     474:	61 2f       	mov	r22, r17
     476:	ce 01       	movw	r24, r28
     478:	0e 94 d7 01 	call	0x3ae	; 0x3ae <PortWrite>
     47c:	ce 01       	movw	r24, r28
     47e:	0e 94 bb 01 	call	0x376	; 0x376 <LCDEN>
     482:	df 91       	pop	r29
     484:	cf 91       	pop	r28
     486:	1f 91       	pop	r17
     488:	08 95       	ret

0000048a <LCDInit>:
     48a:	cf 93       	push	r28
     48c:	df 93       	push	r29
     48e:	ec 01       	movw	r28, r24
     490:	41 e0       	ldi	r20, 0x01	; 1
     492:	6a 81       	ldd	r22, Y+2	; 0x02
     494:	89 81       	ldd	r24, Y+1	; 0x01
     496:	0e 94 72 00 	call	0xe4	; 0xe4 <DIO_SetPinDir>
     49a:	41 e0       	ldi	r20, 0x01	; 1
     49c:	6b 81       	ldd	r22, Y+3	; 0x03
     49e:	89 81       	ldd	r24, Y+1	; 0x01
     4a0:	0e 94 72 00 	call	0xe4	; 0xe4 <DIO_SetPinDir>
     4a4:	41 e0       	ldi	r20, 0x01	; 1
     4a6:	6c 81       	ldd	r22, Y+4	; 0x04
     4a8:	89 81       	ldd	r24, Y+1	; 0x01
     4aa:	0e 94 72 00 	call	0xe4	; 0xe4 <DIO_SetPinDir>
     4ae:	40 e0       	ldi	r20, 0x00	; 0
     4b0:	6b 81       	ldd	r22, Y+3	; 0x03
     4b2:	89 81       	ldd	r24, Y+1	; 0x01
     4b4:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
     4b8:	88 81       	ld	r24, Y
     4ba:	81 11       	cpse	r24, r1
     4bc:	3c c0       	rjmp	.+120    	; 0x536 <LCDInit+0xac>
     4be:	41 e0       	ldi	r20, 0x01	; 1
     4c0:	6e 81       	ldd	r22, Y+6	; 0x06
     4c2:	8d 81       	ldd	r24, Y+5	; 0x05
     4c4:	0e 94 72 00 	call	0xe4	; 0xe4 <DIO_SetPinDir>
     4c8:	41 e0       	ldi	r20, 0x01	; 1
     4ca:	6f 81       	ldd	r22, Y+7	; 0x07
     4cc:	8d 81       	ldd	r24, Y+5	; 0x05
     4ce:	0e 94 72 00 	call	0xe4	; 0xe4 <DIO_SetPinDir>
     4d2:	41 e0       	ldi	r20, 0x01	; 1
     4d4:	68 85       	ldd	r22, Y+8	; 0x08
     4d6:	8d 81       	ldd	r24, Y+5	; 0x05
     4d8:	0e 94 72 00 	call	0xe4	; 0xe4 <DIO_SetPinDir>
     4dc:	41 e0       	ldi	r20, 0x01	; 1
     4de:	69 85       	ldd	r22, Y+9	; 0x09
     4e0:	8d 81       	ldd	r24, Y+5	; 0x05
     4e2:	0e 94 72 00 	call	0xe4	; 0xe4 <DIO_SetPinDir>
     4e6:	2f ef       	ldi	r18, 0xFF	; 255
     4e8:	89 ef       	ldi	r24, 0xF9	; 249
     4ea:	90 e0       	ldi	r25, 0x00	; 0
     4ec:	21 50       	subi	r18, 0x01	; 1
     4ee:	80 40       	sbci	r24, 0x00	; 0
     4f0:	90 40       	sbci	r25, 0x00	; 0
     4f2:	e1 f7       	brne	.-8      	; 0x4ec <LCDInit+0x62>
     4f4:	00 c0       	rjmp	.+0      	; 0x4f6 <LCDInit+0x6c>
     4f6:	00 00       	nop
     4f8:	63 e3       	ldi	r22, 0x33	; 51
     4fa:	ce 01       	movw	r24, r28
     4fc:	0e 94 1b 02 	call	0x436	; 0x436 <cmd>
     500:	8f e9       	ldi	r24, 0x9F	; 159
     502:	9f e0       	ldi	r25, 0x0F	; 15
     504:	01 97       	sbiw	r24, 0x01	; 1
     506:	f1 f7       	brne	.-4      	; 0x504 <LCDInit+0x7a>
     508:	00 c0       	rjmp	.+0      	; 0x50a <LCDInit+0x80>
     50a:	00 00       	nop
     50c:	62 e3       	ldi	r22, 0x32	; 50
     50e:	ce 01       	movw	r24, r28
     510:	0e 94 1b 02 	call	0x436	; 0x436 <cmd>
     514:	8f e9       	ldi	r24, 0x9F	; 159
     516:	9f e0       	ldi	r25, 0x0F	; 15
     518:	01 97       	sbiw	r24, 0x01	; 1
     51a:	f1 f7       	brne	.-4      	; 0x518 <LCDInit+0x8e>
     51c:	00 c0       	rjmp	.+0      	; 0x51e <LCDInit+0x94>
     51e:	00 00       	nop
     520:	68 e2       	ldi	r22, 0x28	; 40
     522:	ce 01       	movw	r24, r28
     524:	0e 94 1b 02 	call	0x436	; 0x436 <cmd>
     528:	8f e9       	ldi	r24, 0x9F	; 159
     52a:	9f e0       	ldi	r25, 0x0F	; 15
     52c:	01 97       	sbiw	r24, 0x01	; 1
     52e:	f1 f7       	brne	.-4      	; 0x52c <LCDInit+0xa2>
     530:	00 c0       	rjmp	.+0      	; 0x532 <LCDInit+0xa8>
     532:	00 00       	nop
     534:	17 c0       	rjmp	.+46     	; 0x564 <LCDInit+0xda>
     536:	6f ef       	ldi	r22, 0xFF	; 255
     538:	8d 81       	ldd	r24, Y+5	; 0x05
     53a:	0e 94 49 00 	call	0x92	; 0x92 <DIO_SetPortDir>
     53e:	9f ef       	ldi	r25, 0xFF	; 255
     540:	29 ef       	ldi	r18, 0xF9	; 249
     542:	80 e0       	ldi	r24, 0x00	; 0
     544:	91 50       	subi	r25, 0x01	; 1
     546:	20 40       	sbci	r18, 0x00	; 0
     548:	80 40       	sbci	r24, 0x00	; 0
     54a:	e1 f7       	brne	.-8      	; 0x544 <LCDInit+0xba>
     54c:	00 c0       	rjmp	.+0      	; 0x54e <LCDInit+0xc4>
     54e:	00 00       	nop
     550:	68 e3       	ldi	r22, 0x38	; 56
     552:	ce 01       	movw	r24, r28
     554:	0e 94 1b 02 	call	0x436	; 0x436 <cmd>
     558:	8f e9       	ldi	r24, 0x9F	; 159
     55a:	9f e0       	ldi	r25, 0x0F	; 15
     55c:	01 97       	sbiw	r24, 0x01	; 1
     55e:	f1 f7       	brne	.-4      	; 0x55c <LCDInit+0xd2>
     560:	00 c0       	rjmp	.+0      	; 0x562 <LCDInit+0xd8>
     562:	00 00       	nop
     564:	63 e0       	ldi	r22, 0x03	; 3
     566:	ce 01       	movw	r24, r28
     568:	0e 94 1b 02 	call	0x436	; 0x436 <cmd>
     56c:	8f e1       	ldi	r24, 0x1F	; 31
     56e:	9e e4       	ldi	r25, 0x4E	; 78
     570:	01 97       	sbiw	r24, 0x01	; 1
     572:	f1 f7       	brne	.-4      	; 0x570 <LCDInit+0xe6>
     574:	00 c0       	rjmp	.+0      	; 0x576 <LCDInit+0xec>
     576:	00 00       	nop
     578:	63 e0       	ldi	r22, 0x03	; 3
     57a:	ce 01       	movw	r24, r28
     57c:	0e 94 1b 02 	call	0x436	; 0x436 <cmd>
     580:	8f ed       	ldi	r24, 0xDF	; 223
     582:	9b ea       	ldi	r25, 0xAB	; 171
     584:	01 97       	sbiw	r24, 0x01	; 1
     586:	f1 f7       	brne	.-4      	; 0x584 <LCDInit+0xfa>
     588:	00 c0       	rjmp	.+0      	; 0x58a <LCDInit+0x100>
     58a:	00 00       	nop
     58c:	63 e0       	ldi	r22, 0x03	; 3
     58e:	ce 01       	movw	r24, r28
     590:	0e 94 1b 02 	call	0x436	; 0x436 <cmd>
     594:	66 e0       	ldi	r22, 0x06	; 6
     596:	ce 01       	movw	r24, r28
     598:	0e 94 1b 02 	call	0x436	; 0x436 <cmd>
     59c:	8f e9       	ldi	r24, 0x9F	; 159
     59e:	9f e0       	ldi	r25, 0x0F	; 15
     5a0:	01 97       	sbiw	r24, 0x01	; 1
     5a2:	f1 f7       	brne	.-4      	; 0x5a0 <LCDInit+0x116>
     5a4:	00 c0       	rjmp	.+0      	; 0x5a6 <LCDInit+0x11c>
     5a6:	00 00       	nop
     5a8:	6c e0       	ldi	r22, 0x0C	; 12
     5aa:	ce 01       	movw	r24, r28
     5ac:	0e 94 1b 02 	call	0x436	; 0x436 <cmd>
     5b0:	8f e9       	ldi	r24, 0x9F	; 159
     5b2:	9f e0       	ldi	r25, 0x0F	; 15
     5b4:	01 97       	sbiw	r24, 0x01	; 1
     5b6:	f1 f7       	brne	.-4      	; 0x5b4 <LCDInit+0x12a>
     5b8:	00 c0       	rjmp	.+0      	; 0x5ba <LCDInit+0x130>
     5ba:	00 00       	nop
     5bc:	60 e8       	ldi	r22, 0x80	; 128
     5be:	ce 01       	movw	r24, r28
     5c0:	0e 94 1b 02 	call	0x436	; 0x436 <cmd>
     5c4:	8f e9       	ldi	r24, 0x9F	; 159
     5c6:	9f e0       	ldi	r25, 0x0F	; 15
     5c8:	01 97       	sbiw	r24, 0x01	; 1
     5ca:	f1 f7       	brne	.-4      	; 0x5c8 <LCDInit+0x13e>
     5cc:	00 c0       	rjmp	.+0      	; 0x5ce <LCDInit+0x144>
     5ce:	00 00       	nop
     5d0:	df 91       	pop	r29
     5d2:	cf 91       	pop	r28
     5d4:	08 95       	ret

000005d6 <writeData>:
     5d6:	1f 93       	push	r17
     5d8:	cf 93       	push	r28
     5da:	df 93       	push	r29
     5dc:	ec 01       	movw	r28, r24
     5de:	16 2f       	mov	r17, r22
     5e0:	41 e0       	ldi	r20, 0x01	; 1
     5e2:	6a 81       	ldd	r22, Y+2	; 0x02
     5e4:	89 81       	ldd	r24, Y+1	; 0x01
     5e6:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
     5ea:	88 81       	ld	r24, Y
     5ec:	81 11       	cpse	r24, r1
     5ee:	12 c0       	rjmp	.+36     	; 0x614 <writeData+0x3e>
     5f0:	61 2f       	mov	r22, r17
     5f2:	62 95       	swap	r22
     5f4:	6f 70       	andi	r22, 0x0F	; 15
     5f6:	ce 01       	movw	r24, r28
     5f8:	0e 94 d7 01 	call	0x3ae	; 0x3ae <PortWrite>
     5fc:	ce 01       	movw	r24, r28
     5fe:	0e 94 bb 01 	call	0x376	; 0x376 <LCDEN>
     602:	61 2f       	mov	r22, r17
     604:	6f 70       	andi	r22, 0x0F	; 15
     606:	ce 01       	movw	r24, r28
     608:	0e 94 d7 01 	call	0x3ae	; 0x3ae <PortWrite>
     60c:	ce 01       	movw	r24, r28
     60e:	0e 94 bb 01 	call	0x376	; 0x376 <LCDEN>
     612:	07 c0       	rjmp	.+14     	; 0x622 <writeData+0x4c>
     614:	61 2f       	mov	r22, r17
     616:	ce 01       	movw	r24, r28
     618:	0e 94 d7 01 	call	0x3ae	; 0x3ae <PortWrite>
     61c:	ce 01       	movw	r24, r28
     61e:	0e 94 bb 01 	call	0x376	; 0x376 <LCDEN>
     622:	df 91       	pop	r29
     624:	cf 91       	pop	r28
     626:	1f 91       	pop	r17
     628:	08 95       	ret

0000062a <LcdSetCursor>:
     62a:	20 e4       	ldi	r18, 0x40	; 64
     62c:	62 9f       	mul	r22, r18
     62e:	40 0d       	add	r20, r0
     630:	11 24       	eor	r1, r1
     632:	64 2f       	mov	r22, r20
     634:	60 68       	ori	r22, 0x80	; 128
     636:	0e 94 1b 02 	call	0x436	; 0x436 <cmd>
     63a:	08 95       	ret

0000063c <Clear>:
     63c:	61 e0       	ldi	r22, 0x01	; 1
     63e:	0e 94 1b 02 	call	0x436	; 0x436 <cmd>
     642:	08 95       	ret

00000644 <writeString>:
	{
		cmd(lcd,0x10);
		_delay_ms(1);
	}
}
void writeString(LCD *lcd,char *LINE){
     644:	ef 92       	push	r14
     646:	ff 92       	push	r15
     648:	0f 93       	push	r16
     64a:	1f 93       	push	r17
     64c:	cf 93       	push	r28
     64e:	df 93       	push	r29
     650:	7c 01       	movw	r14, r24
     652:	8b 01       	movw	r16, r22
	int i;
	for (i = 0 ; LINE[i] != '\0' ; i++)
     654:	c0 e0       	ldi	r28, 0x00	; 0
     656:	d0 e0       	ldi	r29, 0x00	; 0
     658:	04 c0       	rjmp	.+8      	; 0x662 <writeString+0x1e>
	{
		writeData(lcd,LINE[i]);
     65a:	c7 01       	movw	r24, r14
     65c:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <writeData>
		_delay_ms(1);
	}
}
void writeString(LCD *lcd,char *LINE){
	int i;
	for (i = 0 ; LINE[i] != '\0' ; i++)
     660:	21 96       	adiw	r28, 0x01	; 1
     662:	f8 01       	movw	r30, r16
     664:	ec 0f       	add	r30, r28
     666:	fd 1f       	adc	r31, r29
     668:	60 81       	ld	r22, Z
     66a:	61 11       	cpse	r22, r1
     66c:	f6 cf       	rjmp	.-20     	; 0x65a <writeString+0x16>
	{
		writeData(lcd,LINE[i]);
	}
}
     66e:	df 91       	pop	r29
     670:	cf 91       	pop	r28
     672:	1f 91       	pop	r17
     674:	0f 91       	pop	r16
     676:	ff 90       	pop	r15
     678:	ef 90       	pop	r14
     67a:	08 95       	ret

0000067c <SystemInit>:


void SystemInit(void)
{
	
	Lcd1.mode = LCD_4BIT_MODE;
     67c:	e7 ed       	ldi	r30, 0xD7	; 215
     67e:	f0 e0       	ldi	r31, 0x00	; 0
     680:	10 82       	st	Z, r1
	Lcd1.controlPort = DIO_PORTB;
     682:	81 e0       	ldi	r24, 0x01	; 1
     684:	81 83       	std	Z+1, r24	; 0x01
	Lcd1.RSPin = DIO_PIN_1;
     686:	82 83       	std	Z+2, r24	; 0x02
	Lcd1.RWPin = DIO_PIN_2;
     688:	82 e0       	ldi	r24, 0x02	; 2
     68a:	83 83       	std	Z+3, r24	; 0x03
	Lcd1.ENPin = DIO_PIN_3;
     68c:	83 e0       	ldi	r24, 0x03	; 3
     68e:	84 83       	std	Z+4, r24	; 0x04
	Lcd1.dataPort = DIO_PORTA;
     690:	15 82       	std	Z+5, r1	; 0x05
	Lcd1.D4Pin = DIO_PIN_4;
     692:	84 e0       	ldi	r24, 0x04	; 4
     694:	86 83       	std	Z+6, r24	; 0x06
	Lcd1.D5Pin = DIO_PIN_5;
     696:	85 e0       	ldi	r24, 0x05	; 5
     698:	87 83       	std	Z+7, r24	; 0x07
	Lcd1.D6Pin = DIO_PIN_6;
     69a:	86 e0       	ldi	r24, 0x06	; 6
     69c:	80 87       	std	Z+8, r24	; 0x08
	Lcd1.D7Pin = DIO_PIN_7;
     69e:	87 e0       	ldi	r24, 0x07	; 7
     6a0:	81 87       	std	Z+9, r24	; 0x09
	LCDInit(&Lcd1);
     6a2:	cf 01       	movw	r24, r30
     6a4:	0e 94 45 02 	call	0x48a	; 0x48a <LCDInit>
	UltraSonic_init();
     6a8:	0e 94 be 08 	call	0x117c	; 0x117c <UltraSonic_init>
	ServoInit();
     6ac:	0e 94 80 05 	call	0xb00	; 0xb00 <ServoInit>
	IRInit();
     6b0:	0e 94 ac 01 	call	0x358	; 0x358 <IRInit>
	Motor_init();
     6b4:	0e 94 7c 04 	call	0x8f8	; 0x8f8 <Motor_init>
	sei();
     6b8:	78 94       	sei
     6ba:	08 95       	ret

000006bc <main>:
}

int main(void)
{
    /* Replace with your application code */
	SystemInit();
     6bc:	0e 94 3e 03 	call	0x67c	; 0x67c <SystemInit>
	int speed = 70 , count = 0;
     6c0:	e1 2c       	mov	r14, r1
     6c2:	f1 2c       	mov	r15, r1
     6c4:	06 e4       	ldi	r16, 0x46	; 70
     6c6:	10 e0       	ldi	r17, 0x00	; 0
    while (1) 
    {
		if(UltraSonic_Distance()>20)
     6c8:	0e 94 0c 09 	call	0x1218	; 0x1218 <UltraSonic_Distance>
     6cc:	85 31       	cpi	r24, 0x15	; 21
     6ce:	f8 f0       	brcs	.+62     	; 0x70e <main+0x52>
		{
 			LcdSetCursor(&Lcd1,0,0);
     6d0:	40 e0       	ldi	r20, 0x00	; 0
     6d2:	60 e0       	ldi	r22, 0x00	; 0
     6d4:	87 ed       	ldi	r24, 0xD7	; 215
     6d6:	90 e0       	ldi	r25, 0x00	; 0
     6d8:	0e 94 15 03 	call	0x62a	; 0x62a <LcdSetCursor>
			writeString(&Lcd1,"Distance > 20 cm");
     6dc:	60 e6       	ldi	r22, 0x60	; 96
     6de:	70 e0       	ldi	r23, 0x00	; 0
     6e0:	87 ed       	ldi	r24, 0xD7	; 215
     6e2:	90 e0       	ldi	r25, 0x00	; 0
     6e4:	0e 94 22 03 	call	0x644	; 0x644 <writeString>
			LcdSetCursor(&Lcd1,1,0);
     6e8:	40 e0       	ldi	r20, 0x00	; 0
     6ea:	61 e0       	ldi	r22, 0x01	; 1
     6ec:	87 ed       	ldi	r24, 0xD7	; 215
     6ee:	90 e0       	ldi	r25, 0x00	; 0
     6f0:	0e 94 15 03 	call	0x62a	; 0x62a <LcdSetCursor>
			writeString(&Lcd1,"move foreword");
     6f4:	61 e7       	ldi	r22, 0x71	; 113
     6f6:	70 e0       	ldi	r23, 0x00	; 0
     6f8:	87 ed       	ldi	r24, 0xD7	; 215
     6fa:	90 e0       	ldi	r25, 0x00	; 0
     6fc:	0e 94 22 03 	call	0x644	; 0x644 <writeString>
			Motor_Speet(100);
     700:	84 e6       	ldi	r24, 0x64	; 100
     702:	90 e0       	ldi	r25, 0x00	; 0
     704:	0e 94 ad 04 	call	0x95a	; 0x95a <Motor_Speet>
			Motor_foroword();
     708:	0e 94 c3 04 	call	0x986	; 0x986 <Motor_foroword>
     70c:	dd cf       	rjmp	.-70     	; 0x6c8 <main+0xc>
		} 
		else if(UltraSonic_Distance()>5 && UltraSonic_Distance()<=20)
     70e:	0e 94 0c 09 	call	0x1218	; 0x1218 <UltraSonic_Distance>
     712:	86 30       	cpi	r24, 0x06	; 6
     714:	08 f4       	brcc	.+2      	; 0x718 <main+0x5c>
     716:	6f c0       	rjmp	.+222    	; 0x7f6 <main+0x13a>
     718:	0e 94 0c 09 	call	0x1218	; 0x1218 <UltraSonic_Distance>
     71c:	85 31       	cpi	r24, 0x15	; 21
     71e:	08 f0       	brcs	.+2      	; 0x722 <main+0x66>
     720:	6a c0       	rjmp	.+212    	; 0x7f6 <main+0x13a>
		{
			LcdSetCursor(&Lcd1,0,0);
     722:	40 e0       	ldi	r20, 0x00	; 0
     724:	60 e0       	ldi	r22, 0x00	; 0
     726:	87 ed       	ldi	r24, 0xD7	; 215
     728:	90 e0       	ldi	r25, 0x00	; 0
     72a:	0e 94 15 03 	call	0x62a	; 0x62a <LcdSetCursor>
			writeString(&Lcd1,"Distance < 20 cm");
     72e:	6f e7       	ldi	r22, 0x7F	; 127
     730:	70 e0       	ldi	r23, 0x00	; 0
     732:	87 ed       	ldi	r24, 0xD7	; 215
     734:	90 e0       	ldi	r25, 0x00	; 0
     736:	0e 94 22 03 	call	0x644	; 0x644 <writeString>
			LcdSetCursor(&Lcd1,1,0);
     73a:	40 e0       	ldi	r20, 0x00	; 0
     73c:	61 e0       	ldi	r22, 0x01	; 1
     73e:	87 ed       	ldi	r24, 0xD7	; 215
     740:	90 e0       	ldi	r25, 0x00	; 0
     742:	0e 94 15 03 	call	0x62a	; 0x62a <LcdSetCursor>
			writeString(&Lcd1,"scanning for output");
     746:	60 e9       	ldi	r22, 0x90	; 144
     748:	70 e0       	ldi	r23, 0x00	; 0
     74a:	87 ed       	ldi	r24, 0xD7	; 215
     74c:	90 e0       	ldi	r25, 0x00	; 0
     74e:	0e 94 22 03 	call	0x644	; 0x644 <writeString>
			Motor_Stop();
     752:	0e 94 17 05 	call	0xa2e	; 0xa2e <Motor_Stop>
			ServoGoToAngle(-90);
     756:	86 ea       	ldi	r24, 0xA6	; 166
     758:	0e 94 2c 05 	call	0xa58	; 0xa58 <ServoGoToAngle>
			if (UltraSonic_Distance()>20)
     75c:	0e 94 0c 09 	call	0x1218	; 0x1218 <UltraSonic_Distance>
     760:	85 31       	cpi	r24, 0x15	; 21
     762:	88 f0       	brcs	.+34     	; 0x786 <main+0xca>
			{
				Motor_Left();
     764:	0e 94 ed 04 	call	0x9da	; 0x9da <Motor_Left>
     768:	2f ef       	ldi	r18, 0xFF	; 255
     76a:	89 e6       	ldi	r24, 0x69	; 105
     76c:	98 e1       	ldi	r25, 0x18	; 24
     76e:	21 50       	subi	r18, 0x01	; 1
     770:	80 40       	sbci	r24, 0x00	; 0
     772:	90 40       	sbci	r25, 0x00	; 0
     774:	e1 f7       	brne	.-8      	; 0x76e <main+0xb2>
     776:	00 c0       	rjmp	.+0      	; 0x778 <main+0xbc>
     778:	00 00       	nop
				_delay_ms(500);
				speed = 100;
				ServoGoToAngle(0);
     77a:	80 e0       	ldi	r24, 0x00	; 0
     77c:	0e 94 2c 05 	call	0xa58	; 0xa58 <ServoGoToAngle>
			ServoGoToAngle(-90);
			if (UltraSonic_Distance()>20)
			{
				Motor_Left();
				_delay_ms(500);
				speed = 100;
     780:	04 e6       	ldi	r16, 0x64	; 100
     782:	10 e0       	ldi	r17, 0x00	; 0
     784:	1b c0       	rjmp	.+54     	; 0x7bc <main+0x100>
				ServoGoToAngle(0);
			} 
			else
			{
				ServoGoToAngle(90);
     786:	8a e5       	ldi	r24, 0x5A	; 90
     788:	0e 94 2c 05 	call	0xa58	; 0xa58 <ServoGoToAngle>
				if (UltraSonic_Distance()>20)
     78c:	0e 94 0c 09 	call	0x1218	; 0x1218 <UltraSonic_Distance>
     790:	85 31       	cpi	r24, 0x15	; 21
     792:	88 f0       	brcs	.+34     	; 0x7b6 <main+0xfa>
				{
					Motor_Right();
     794:	0e 94 02 05 	call	0xa04	; 0xa04 <Motor_Right>
     798:	2f ef       	ldi	r18, 0xFF	; 255
     79a:	89 e6       	ldi	r24, 0x69	; 105
     79c:	98 e1       	ldi	r25, 0x18	; 24
     79e:	21 50       	subi	r18, 0x01	; 1
     7a0:	80 40       	sbci	r24, 0x00	; 0
     7a2:	90 40       	sbci	r25, 0x00	; 0
     7a4:	e1 f7       	brne	.-8      	; 0x79e <main+0xe2>
     7a6:	00 c0       	rjmp	.+0      	; 0x7a8 <main+0xec>
     7a8:	00 00       	nop
					_delay_ms(500);
					speed = 100;
					ServoGoToAngle(0);
     7aa:	80 e0       	ldi	r24, 0x00	; 0
     7ac:	0e 94 2c 05 	call	0xa58	; 0xa58 <ServoGoToAngle>
				ServoGoToAngle(90);
				if (UltraSonic_Distance()>20)
				{
					Motor_Right();
					_delay_ms(500);
					speed = 100;
     7b0:	04 e6       	ldi	r16, 0x64	; 100
     7b2:	10 e0       	ldi	r17, 0x00	; 0
     7b4:	03 c0       	rjmp	.+6      	; 0x7bc <main+0x100>
					ServoGoToAngle(0);
				}
				else
				{
					ServoGoToAngle(0);
     7b6:	80 e0       	ldi	r24, 0x00	; 0
     7b8:	0e 94 2c 05 	call	0xa58	; 0xa58 <ServoGoToAngle>
				}
			}
			if (speed > 30 && count == 50)
     7bc:	0f 31       	cpi	r16, 0x1F	; 31
     7be:	11 05       	cpc	r17, r1
     7c0:	44 f0       	brlt	.+16     	; 0x7d2 <main+0x116>
     7c2:	22 e3       	ldi	r18, 0x32	; 50
     7c4:	e2 16       	cp	r14, r18
     7c6:	f1 04       	cpc	r15, r1
     7c8:	21 f4       	brne	.+8      	; 0x7d2 <main+0x116>
			{
				speed --;
     7ca:	01 50       	subi	r16, 0x01	; 1
     7cc:	11 09       	sbc	r17, r1
				count = 0;
     7ce:	e1 2c       	mov	r14, r1
     7d0:	f1 2c       	mov	r15, r1
			}
			count ++;
     7d2:	8f ef       	ldi	r24, 0xFF	; 255
     7d4:	e8 1a       	sub	r14, r24
     7d6:	f8 0a       	sbc	r15, r24
			Motor_Speet(speed);
     7d8:	c8 01       	movw	r24, r16
     7da:	0e 94 ad 04 	call	0x95a	; 0x95a <Motor_Speet>
			Motor_foroword();
     7de:	0e 94 c3 04 	call	0x986	; 0x986 <Motor_foroword>
     7e2:	9f ef       	ldi	r25, 0xFF	; 255
     7e4:	21 ee       	ldi	r18, 0xE1	; 225
     7e6:	84 e0       	ldi	r24, 0x04	; 4
     7e8:	91 50       	subi	r25, 0x01	; 1
     7ea:	20 40       	sbci	r18, 0x00	; 0
     7ec:	80 40       	sbci	r24, 0x00	; 0
     7ee:	e1 f7       	brne	.-8      	; 0x7e8 <main+0x12c>
     7f0:	00 c0       	rjmp	.+0      	; 0x7f2 <main+0x136>
     7f2:	00 00       	nop
     7f4:	69 cf       	rjmp	.-302    	; 0x6c8 <main+0xc>
			_delay_ms(100);
		}else{
			LcdSetCursor(&Lcd1,0,0);
     7f6:	40 e0       	ldi	r20, 0x00	; 0
     7f8:	60 e0       	ldi	r22, 0x00	; 0
     7fa:	87 ed       	ldi	r24, 0xD7	; 215
     7fc:	90 e0       	ldi	r25, 0x00	; 0
     7fe:	0e 94 15 03 	call	0x62a	; 0x62a <LcdSetCursor>
			writeString(&Lcd1,"Distance < 5 cm");
     802:	64 ea       	ldi	r22, 0xA4	; 164
     804:	70 e0       	ldi	r23, 0x00	; 0
     806:	87 ed       	ldi	r24, 0xD7	; 215
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	0e 94 22 03 	call	0x644	; 0x644 <writeString>
			LcdSetCursor(&Lcd1,1,0);
     80e:	40 e0       	ldi	r20, 0x00	; 0
     810:	61 e0       	ldi	r22, 0x01	; 1
     812:	87 ed       	ldi	r24, 0xD7	; 215
     814:	90 e0       	ldi	r25, 0x00	; 0
     816:	0e 94 15 03 	call	0x62a	; 0x62a <LcdSetCursor>
			writeString(&Lcd1,"there is no output");
     81a:	64 eb       	ldi	r22, 0xB4	; 180
     81c:	70 e0       	ldi	r23, 0x00	; 0
     81e:	87 ed       	ldi	r24, 0xD7	; 215
     820:	90 e0       	ldi	r25, 0x00	; 0
     822:	0e 94 22 03 	call	0x644	; 0x644 <writeString>
     826:	9f ef       	ldi	r25, 0xFF	; 255
     828:	21 ee       	ldi	r18, 0xE1	; 225
     82a:	84 e0       	ldi	r24, 0x04	; 4
     82c:	91 50       	subi	r25, 0x01	; 1
     82e:	20 40       	sbci	r18, 0x00	; 0
     830:	80 40       	sbci	r24, 0x00	; 0
     832:	e1 f7       	brne	.-8      	; 0x82c <__DATA_REGION_LENGTH__+0x2c>
     834:	00 c0       	rjmp	.+0      	; 0x836 <__DATA_REGION_LENGTH__+0x36>
     836:	00 00       	nop
			_delay_ms(100);
			Clear(&Lcd1);
     838:	87 ed       	ldi	r24, 0xD7	; 215
     83a:	90 e0       	ldi	r25, 0x00	; 0
     83c:	0e 94 1e 03 	call	0x63c	; 0x63c <Clear>
			writeString(&Lcd1,"move backward");
     840:	67 ec       	ldi	r22, 0xC7	; 199
     842:	70 e0       	ldi	r23, 0x00	; 0
     844:	87 ed       	ldi	r24, 0xD7	; 215
     846:	90 e0       	ldi	r25, 0x00	; 0
     848:	0e 94 22 03 	call	0x644	; 0x644 <writeString>
			Uint8 ThereIsOut = 0;
     84c:	c0 e0       	ldi	r28, 0x00	; 0
			speed = 50;
     84e:	02 e3       	ldi	r16, 0x32	; 50
     850:	10 e0       	ldi	r17, 0x00	; 0
			while(!ThereIsOut)
     852:	4c c0       	rjmp	.+152    	; 0x8ec <__stack+0x8d>
			{
				Motor_Speet(speed);
     854:	c8 01       	movw	r24, r16
     856:	0e 94 ad 04 	call	0x95a	; 0x95a <Motor_Speet>
				Motor_backword();
     85a:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <Motor_backword>
				ServoGoToAngle(-90);
     85e:	86 ea       	ldi	r24, 0xA6	; 166
     860:	0e 94 2c 05 	call	0xa58	; 0xa58 <ServoGoToAngle>
				if (UltraSonic_Distance()>20)
     864:	0e 94 0c 09 	call	0x1218	; 0x1218 <UltraSonic_Distance>
     868:	85 31       	cpi	r24, 0x15	; 21
     86a:	d8 f0       	brcs	.+54     	; 0x8a2 <__stack+0x43>
				{
					Motor_Left();
     86c:	0e 94 ed 04 	call	0x9da	; 0x9da <Motor_Left>
     870:	9f ef       	ldi	r25, 0xFF	; 255
     872:	29 e6       	ldi	r18, 0x69	; 105
     874:	88 e1       	ldi	r24, 0x18	; 24
     876:	91 50       	subi	r25, 0x01	; 1
     878:	20 40       	sbci	r18, 0x00	; 0
     87a:	80 40       	sbci	r24, 0x00	; 0
     87c:	e1 f7       	brne	.-8      	; 0x876 <__stack+0x17>
     87e:	00 c0       	rjmp	.+0      	; 0x880 <__stack+0x21>
     880:	00 00       	nop
					_delay_ms(500);
					speed = 100;
					ThereIsOut = 1;
					ServoGoToAngle(0);
     882:	80 e0       	ldi	r24, 0x00	; 0
     884:	0e 94 2c 05 	call	0xa58	; 0xa58 <ServoGoToAngle>
     888:	9f ef       	ldi	r25, 0xFF	; 255
     88a:	21 ee       	ldi	r18, 0xE1	; 225
     88c:	84 e0       	ldi	r24, 0x04	; 4
     88e:	91 50       	subi	r25, 0x01	; 1
     890:	20 40       	sbci	r18, 0x00	; 0
     892:	80 40       	sbci	r24, 0x00	; 0
     894:	e1 f7       	brne	.-8      	; 0x88e <__stack+0x2f>
     896:	00 c0       	rjmp	.+0      	; 0x898 <__stack+0x39>
     898:	00 00       	nop
				if (UltraSonic_Distance()>20)
				{
					Motor_Left();
					_delay_ms(500);
					speed = 100;
					ThereIsOut = 1;
     89a:	c1 e0       	ldi	r28, 0x01	; 1
				ServoGoToAngle(-90);
				if (UltraSonic_Distance()>20)
				{
					Motor_Left();
					_delay_ms(500);
					speed = 100;
     89c:	04 e6       	ldi	r16, 0x64	; 100
     89e:	10 e0       	ldi	r17, 0x00	; 0
     8a0:	25 c0       	rjmp	.+74     	; 0x8ec <__stack+0x8d>
					ServoGoToAngle(0);
					_delay_ms(100);
				}
				else
				{
					ServoGoToAngle(90);
     8a2:	8a e5       	ldi	r24, 0x5A	; 90
     8a4:	0e 94 2c 05 	call	0xa58	; 0xa58 <ServoGoToAngle>
					if (UltraSonic_Distance()>20)
     8a8:	0e 94 0c 09 	call	0x1218	; 0x1218 <UltraSonic_Distance>
     8ac:	85 31       	cpi	r24, 0x15	; 21
     8ae:	90 f0       	brcs	.+36     	; 0x8d4 <__stack+0x75>
					{
						Motor_Right();
     8b0:	0e 94 02 05 	call	0xa04	; 0xa04 <Motor_Right>
     8b4:	9f ef       	ldi	r25, 0xFF	; 255
     8b6:	29 e6       	ldi	r18, 0x69	; 105
     8b8:	88 e1       	ldi	r24, 0x18	; 24
     8ba:	91 50       	subi	r25, 0x01	; 1
     8bc:	20 40       	sbci	r18, 0x00	; 0
     8be:	80 40       	sbci	r24, 0x00	; 0
     8c0:	e1 f7       	brne	.-8      	; 0x8ba <__stack+0x5b>
     8c2:	00 c0       	rjmp	.+0      	; 0x8c4 <__stack+0x65>
     8c4:	00 00       	nop
						_delay_ms(500);
						speed = 100;
						ThereIsOut = 1;
						ServoGoToAngle(0);
     8c6:	80 e0       	ldi	r24, 0x00	; 0
     8c8:	0e 94 2c 05 	call	0xa58	; 0xa58 <ServoGoToAngle>
					if (UltraSonic_Distance()>20)
					{
						Motor_Right();
						_delay_ms(500);
						speed = 100;
						ThereIsOut = 1;
     8cc:	c1 e0       	ldi	r28, 0x01	; 1
					ServoGoToAngle(90);
					if (UltraSonic_Distance()>20)
					{
						Motor_Right();
						_delay_ms(500);
						speed = 100;
     8ce:	04 e6       	ldi	r16, 0x64	; 100
     8d0:	10 e0       	ldi	r17, 0x00	; 0
     8d2:	0c c0       	rjmp	.+24     	; 0x8ec <__stack+0x8d>
						ThereIsOut = 1;
						ServoGoToAngle(0);
					}
					else
					{
						ServoGoToAngle(0);
     8d4:	80 e0       	ldi	r24, 0x00	; 0
     8d6:	0e 94 2c 05 	call	0xa58	; 0xa58 <ServoGoToAngle>
     8da:	9f ef       	ldi	r25, 0xFF	; 255
     8dc:	21 ee       	ldi	r18, 0xE1	; 225
     8de:	84 e0       	ldi	r24, 0x04	; 4
     8e0:	91 50       	subi	r25, 0x01	; 1
     8e2:	20 40       	sbci	r18, 0x00	; 0
     8e4:	80 40       	sbci	r24, 0x00	; 0
     8e6:	e1 f7       	brne	.-8      	; 0x8e0 <__stack+0x81>
     8e8:	00 c0       	rjmp	.+0      	; 0x8ea <__stack+0x8b>
     8ea:	00 00       	nop
			_delay_ms(100);
			Clear(&Lcd1);
			writeString(&Lcd1,"move backward");
			Uint8 ThereIsOut = 0;
			speed = 50;
			while(!ThereIsOut)
     8ec:	cc 23       	and	r28, r28
     8ee:	09 f4       	brne	.+2      	; 0x8f2 <__stack+0x93>
     8f0:	b1 cf       	rjmp	.-158    	; 0x854 <__DATA_REGION_LENGTH__+0x54>
						ServoGoToAngle(0);
						_delay_ms(100);
					}
				}
			}
			Motor_foroword();
     8f2:	0e 94 c3 04 	call	0x986	; 0x986 <Motor_foroword>
     8f6:	e8 ce       	rjmp	.-560    	; 0x6c8 <main+0xc>

000008f8 <Motor_init>:
TimerControl MotorPWMTimer;


void Motor_init(void)
{
	MotorPWMTimer.TimerSelect		= TIMER2;
     8f8:	e1 ee       	ldi	r30, 0xE1	; 225
     8fa:	f0 e0       	ldi	r31, 0x00	; 0
     8fc:	82 e0       	ldi	r24, 0x02	; 2
     8fe:	80 83       	st	Z, r24
	MotorPWMTimer.TimerMode			= TIMER_FAST_PWM_MODE;
     900:	93 e0       	ldi	r25, 0x03	; 3
     902:	91 83       	std	Z+1, r25	; 0x01
	MotorPWMTimer.TimerPrescaler	= TimerPrescaler_128;
     904:	20 e8       	ldi	r18, 0x80	; 128
     906:	30 e0       	ldi	r19, 0x00	; 0
     908:	33 83       	std	Z+3, r19	; 0x03
     90a:	22 83       	std	Z+2, r18	; 0x02
	MotorPWMTimer.TimerCompMode		= TIMER_COMPARETOR_CLR;
     90c:	81 87       	std	Z+9, r24	; 0x09
	DIO_SetPinDir(MOTOR_PORT,MOTOR1_PIN0,DIO_PIN_DIR_OUTPUT);
     90e:	41 e0       	ldi	r20, 0x01	; 1
     910:	64 e0       	ldi	r22, 0x04	; 4
     912:	0e 94 72 00 	call	0xe4	; 0xe4 <DIO_SetPinDir>
	DIO_SetPinDir(MOTOR_PORT,MOTOR1_PIN1,DIO_PIN_DIR_OUTPUT);
     916:	41 e0       	ldi	r20, 0x01	; 1
     918:	63 e0       	ldi	r22, 0x03	; 3
     91a:	82 e0       	ldi	r24, 0x02	; 2
     91c:	0e 94 72 00 	call	0xe4	; 0xe4 <DIO_SetPinDir>
	DIO_SetPinDir(MOTOR_PORT,MOTOR2_PIN0,DIO_PIN_DIR_OUTPUT);
     920:	41 e0       	ldi	r20, 0x01	; 1
     922:	66 e0       	ldi	r22, 0x06	; 6
     924:	82 e0       	ldi	r24, 0x02	; 2
     926:	0e 94 72 00 	call	0xe4	; 0xe4 <DIO_SetPinDir>
	DIO_SetPinDir(MOTOR_PORT,MOTOR2_PIN1,DIO_PIN_DIR_OUTPUT);
     92a:	41 e0       	ldi	r20, 0x01	; 1
     92c:	65 e0       	ldi	r22, 0x05	; 5
     92e:	82 e0       	ldi	r24, 0x02	; 2
     930:	0e 94 72 00 	call	0xe4	; 0xe4 <DIO_SetPinDir>
	DIO_SetPinDir(MOTOREN_PORT,MOTOR1_ENPIN,DIO_PIN_DIR_OUTPUT);
     934:	41 e0       	ldi	r20, 0x01	; 1
     936:	67 e0       	ldi	r22, 0x07	; 7
     938:	83 e0       	ldi	r24, 0x03	; 3
     93a:	0e 94 72 00 	call	0xe4	; 0xe4 <DIO_SetPinDir>
	DIO_SetPinDir(MOTOREN_PORT,MOTOR2_ENPIN,DIO_PIN_DIR_OUTPUT);
     93e:	41 e0       	ldi	r20, 0x01	; 1
     940:	67 e0       	ldi	r22, 0x07	; 7
     942:	83 e0       	ldi	r24, 0x03	; 3
     944:	0e 94 72 00 	call	0xe4	; 0xe4 <DIO_SetPinDir>
	Timer_Init(&MotorPWMTimer);
     948:	81 ee       	ldi	r24, 0xE1	; 225
     94a:	90 e0       	ldi	r25, 0x00	; 0
     94c:	0e 94 8e 05 	call	0xb1c	; 0xb1c <Timer_Init>
	Timer_Start(&MotorPWMTimer);
     950:	81 ee       	ldi	r24, 0xE1	; 225
     952:	90 e0       	ldi	r25, 0x00	; 0
     954:	0e 94 86 07 	call	0xf0c	; 0xf0c <Timer_Start>
     958:	08 95       	ret

0000095a <Motor_Speet>:
	
}
void Motor_Speet(int speed)
{
	if (speed > 10 && speed < 100)
     95a:	9c 01       	movw	r18, r24
     95c:	2b 50       	subi	r18, 0x0B	; 11
     95e:	31 09       	sbc	r19, r1
     960:	29 35       	cpi	r18, 0x59	; 89
     962:	31 05       	cpc	r19, r1
     964:	68 f4       	brcc	.+26     	; 0x980 <Motor_Speet+0x26>
	{
		OCR2 = ((255 * speed)/100);
     966:	4f ef       	ldi	r20, 0xFF	; 255
     968:	48 9f       	mul	r20, r24
     96a:	90 01       	movw	r18, r0
     96c:	49 9f       	mul	r20, r25
     96e:	30 0d       	add	r19, r0
     970:	11 24       	eor	r1, r1
     972:	c9 01       	movw	r24, r18
     974:	64 e6       	ldi	r22, 0x64	; 100
     976:	70 e0       	ldi	r23, 0x00	; 0
     978:	0e 94 60 09 	call	0x12c0	; 0x12c0 <__divmodhi4>
     97c:	63 bd       	out	0x23, r22	; 35
     97e:	08 95       	ret
	} 
	else
	{
		OCR2 = 255;
     980:	8f ef       	ldi	r24, 0xFF	; 255
     982:	83 bd       	out	0x23, r24	; 35
     984:	08 95       	ret

00000986 <Motor_foroword>:
	}
}
void Motor_foroword(void)
{
	DIO_SetPinVal(MOTOR_PORT,MOTOR1_PIN0,DIO_PIN_HIGH);
     986:	41 e0       	ldi	r20, 0x01	; 1
     988:	64 e0       	ldi	r22, 0x04	; 4
     98a:	82 e0       	ldi	r24, 0x02	; 2
     98c:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
	DIO_SetPinVal(MOTOR_PORT,MOTOR1_PIN1,DIO_PIN_LOW);
     990:	40 e0       	ldi	r20, 0x00	; 0
     992:	63 e0       	ldi	r22, 0x03	; 3
     994:	82 e0       	ldi	r24, 0x02	; 2
     996:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
	DIO_SetPinVal(MOTOR_PORT,MOTOR2_PIN0,DIO_PIN_HIGH);
     99a:	41 e0       	ldi	r20, 0x01	; 1
     99c:	66 e0       	ldi	r22, 0x06	; 6
     99e:	82 e0       	ldi	r24, 0x02	; 2
     9a0:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
	DIO_SetPinVal(MOTOR_PORT,MOTOR2_PIN1,DIO_PIN_LOW);
     9a4:	40 e0       	ldi	r20, 0x00	; 0
     9a6:	65 e0       	ldi	r22, 0x05	; 5
     9a8:	82 e0       	ldi	r24, 0x02	; 2
     9aa:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
     9ae:	08 95       	ret

000009b0 <Motor_backword>:
}
void Motor_backword(void)
{
	DIO_SetPinVal(MOTOR_PORT,MOTOR1_PIN1,DIO_PIN_HIGH);
     9b0:	41 e0       	ldi	r20, 0x01	; 1
     9b2:	63 e0       	ldi	r22, 0x03	; 3
     9b4:	82 e0       	ldi	r24, 0x02	; 2
     9b6:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
	DIO_SetPinVal(MOTOR_PORT,MOTOR1_PIN0,DIO_PIN_LOW);
     9ba:	40 e0       	ldi	r20, 0x00	; 0
     9bc:	64 e0       	ldi	r22, 0x04	; 4
     9be:	82 e0       	ldi	r24, 0x02	; 2
     9c0:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
	DIO_SetPinVal(MOTOR_PORT,MOTOR2_PIN1,DIO_PIN_HIGH);
     9c4:	41 e0       	ldi	r20, 0x01	; 1
     9c6:	65 e0       	ldi	r22, 0x05	; 5
     9c8:	82 e0       	ldi	r24, 0x02	; 2
     9ca:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
	DIO_SetPinVal(MOTOR_PORT,MOTOR2_PIN0,DIO_PIN_LOW);
     9ce:	40 e0       	ldi	r20, 0x00	; 0
     9d0:	66 e0       	ldi	r22, 0x06	; 6
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
     9d8:	08 95       	ret

000009da <Motor_Left>:
}
void Motor_Left(void)
{
	DIO_SetPinVal(MOTOR_PORT,MOTOR1_PIN0,DIO_PIN_HIGH);
     9da:	41 e0       	ldi	r20, 0x01	; 1
     9dc:	64 e0       	ldi	r22, 0x04	; 4
     9de:	82 e0       	ldi	r24, 0x02	; 2
     9e0:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
	DIO_SetPinVal(MOTOR_PORT,MOTOR1_PIN1,DIO_PIN_LOW);
     9e4:	40 e0       	ldi	r20, 0x00	; 0
     9e6:	63 e0       	ldi	r22, 0x03	; 3
     9e8:	82 e0       	ldi	r24, 0x02	; 2
     9ea:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
	DIO_SetPinVal(MOTOR_PORT,MOTOR2_PIN1,DIO_PIN_HIGH);
     9ee:	41 e0       	ldi	r20, 0x01	; 1
     9f0:	65 e0       	ldi	r22, 0x05	; 5
     9f2:	82 e0       	ldi	r24, 0x02	; 2
     9f4:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
	DIO_SetPinVal(MOTOR_PORT,MOTOR2_PIN0,DIO_PIN_LOW);
     9f8:	40 e0       	ldi	r20, 0x00	; 0
     9fa:	66 e0       	ldi	r22, 0x06	; 6
     9fc:	82 e0       	ldi	r24, 0x02	; 2
     9fe:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
     a02:	08 95       	ret

00000a04 <Motor_Right>:
}
void Motor_Right(void)
{
	DIO_SetPinVal(MOTOR_PORT,MOTOR1_PIN1,DIO_PIN_HIGH);
     a04:	41 e0       	ldi	r20, 0x01	; 1
     a06:	63 e0       	ldi	r22, 0x03	; 3
     a08:	82 e0       	ldi	r24, 0x02	; 2
     a0a:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
	DIO_SetPinVal(MOTOR_PORT,MOTOR1_PIN0,DIO_PIN_LOW);
     a0e:	40 e0       	ldi	r20, 0x00	; 0
     a10:	64 e0       	ldi	r22, 0x04	; 4
     a12:	82 e0       	ldi	r24, 0x02	; 2
     a14:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
	DIO_SetPinVal(MOTOR_PORT,MOTOR2_PIN0,DIO_PIN_HIGH);
     a18:	41 e0       	ldi	r20, 0x01	; 1
     a1a:	66 e0       	ldi	r22, 0x06	; 6
     a1c:	82 e0       	ldi	r24, 0x02	; 2
     a1e:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
	DIO_SetPinVal(MOTOR_PORT,MOTOR2_PIN1,DIO_PIN_LOW);
     a22:	40 e0       	ldi	r20, 0x00	; 0
     a24:	65 e0       	ldi	r22, 0x05	; 5
     a26:	82 e0       	ldi	r24, 0x02	; 2
     a28:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
     a2c:	08 95       	ret

00000a2e <Motor_Stop>:
}
void Motor_Stop(void)
{
	DIO_SetPinVal(MOTOR_PORT,MOTOR1_PIN1,DIO_PIN_LOW);
     a2e:	40 e0       	ldi	r20, 0x00	; 0
     a30:	63 e0       	ldi	r22, 0x03	; 3
     a32:	82 e0       	ldi	r24, 0x02	; 2
     a34:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
	DIO_SetPinVal(MOTOR_PORT,MOTOR1_PIN0,DIO_PIN_LOW);
     a38:	40 e0       	ldi	r20, 0x00	; 0
     a3a:	64 e0       	ldi	r22, 0x04	; 4
     a3c:	82 e0       	ldi	r24, 0x02	; 2
     a3e:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
	DIO_SetPinVal(MOTOR_PORT,MOTOR2_PIN0,DIO_PIN_LOW);
     a42:	40 e0       	ldi	r20, 0x00	; 0
     a44:	66 e0       	ldi	r22, 0x06	; 6
     a46:	82 e0       	ldi	r24, 0x02	; 2
     a48:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
	DIO_SetPinVal(MOTOR_PORT,MOTOR2_PIN1,DIO_PIN_LOW);
     a4c:	40 e0       	ldi	r20, 0x00	; 0
     a4e:	65 e0       	ldi	r22, 0x05	; 5
     a50:	82 e0       	ldi	r24, 0x02	; 2
     a52:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
     a56:	08 95       	ret

00000a58 <ServoGoToAngle>:
  DIO_SetPinVal(SERVO_PORT,SERVO_PIN,DIO_PIN_LOW);
  ServoGoToAngle(0);    
}
void ServoGoToAngle(Sint8 Angle)
{
	if (Angle == 90)
     a58:	8a 35       	cpi	r24, 0x5A	; 90
     a5a:	d1 f4       	brne	.+52     	; 0xa90 <ServoGoToAngle+0x38>
	{
		DIO_SetPinVal(SERVO_PORT,SERVO_PIN,DIO_PIN_HIGH);         //Rotation to 0 degree
     a5c:	41 e0       	ldi	r20, 0x01	; 1
     a5e:	60 e0       	ldi	r22, 0x00	; 0
     a60:	82 e0       	ldi	r24, 0x02	; 2
     a62:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     a66:	8f e9       	ldi	r24, 0x9F	; 159
     a68:	9f e0       	ldi	r25, 0x0F	; 15
     a6a:	01 97       	sbiw	r24, 0x01	; 1
     a6c:	f1 f7       	brne	.-4      	; 0xa6a <ServoGoToAngle+0x12>
     a6e:	00 c0       	rjmp	.+0      	; 0xa70 <ServoGoToAngle+0x18>
     a70:	00 00       	nop
		_delay_us(1000);      //Rotation to 0 degree
		DIO_SetPinVal(SERVO_PORT,SERVO_PIN,DIO_PIN_LOW);         //Rotation to 0 degree
     a72:	40 e0       	ldi	r20, 0x00	; 0
     a74:	60 e0       	ldi	r22, 0x00	; 0
     a76:	82 e0       	ldi	r24, 0x02	; 2
     a78:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     a7c:	9f ef       	ldi	r25, 0xFF	; 255
     a7e:	29 e6       	ldi	r18, 0x69	; 105
     a80:	88 e1       	ldi	r24, 0x18	; 24
     a82:	91 50       	subi	r25, 0x01	; 1
     a84:	20 40       	sbci	r18, 0x00	; 0
     a86:	80 40       	sbci	r24, 0x00	; 0
     a88:	e1 f7       	brne	.-8      	; 0xa82 <ServoGoToAngle+0x2a>
     a8a:	00 c0       	rjmp	.+0      	; 0xa8c <ServoGoToAngle+0x34>
     a8c:	00 00       	nop
     a8e:	08 95       	ret
		_delay_ms(500);
	} 
	else if (Angle == 0)
     a90:	81 11       	cpse	r24, r1
     a92:	1a c0       	rjmp	.+52     	; 0xac8 <ServoGoToAngle+0x70>
	{
		DIO_SetPinVal(SERVO_PORT,SERVO_PIN,DIO_PIN_HIGH);         //Rotation to 0 degree
     a94:	41 e0       	ldi	r20, 0x01	; 1
     a96:	60 e0       	ldi	r22, 0x00	; 0
     a98:	82 e0       	ldi	r24, 0x02	; 2
     a9a:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     a9e:	8f e6       	ldi	r24, 0x6F	; 111
     aa0:	97 e1       	ldi	r25, 0x17	; 23
     aa2:	01 97       	sbiw	r24, 0x01	; 1
     aa4:	f1 f7       	brne	.-4      	; 0xaa2 <ServoGoToAngle+0x4a>
     aa6:	00 c0       	rjmp	.+0      	; 0xaa8 <ServoGoToAngle+0x50>
     aa8:	00 00       	nop
		_delay_us(1500);      //Rotation to 0 degree
		DIO_SetPinVal(SERVO_PORT,SERVO_PIN,DIO_PIN_LOW);         //Rotation to 0 degree
     aaa:	40 e0       	ldi	r20, 0x00	; 0
     aac:	60 e0       	ldi	r22, 0x00	; 0
     aae:	82 e0       	ldi	r24, 0x02	; 2
     ab0:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     ab4:	9f ef       	ldi	r25, 0xFF	; 255
     ab6:	29 e6       	ldi	r18, 0x69	; 105
     ab8:	88 e1       	ldi	r24, 0x18	; 24
     aba:	91 50       	subi	r25, 0x01	; 1
     abc:	20 40       	sbci	r18, 0x00	; 0
     abe:	80 40       	sbci	r24, 0x00	; 0
     ac0:	e1 f7       	brne	.-8      	; 0xaba <ServoGoToAngle+0x62>
     ac2:	00 c0       	rjmp	.+0      	; 0xac4 <ServoGoToAngle+0x6c>
     ac4:	00 00       	nop
     ac6:	08 95       	ret
		_delay_ms(500);
	}
	else if (Angle == -90)
     ac8:	86 3a       	cpi	r24, 0xA6	; 166
     aca:	c9 f4       	brne	.+50     	; 0xafe <ServoGoToAngle+0xa6>
	{
		DIO_SetPinVal(SERVO_PORT,SERVO_PIN,DIO_PIN_HIGH);         //Rotation to 0 degree
     acc:	41 e0       	ldi	r20, 0x01	; 1
     ace:	60 e0       	ldi	r22, 0x00	; 0
     ad0:	82 e0       	ldi	r24, 0x02	; 2
     ad2:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     ad6:	8f e3       	ldi	r24, 0x3F	; 63
     ad8:	9f e1       	ldi	r25, 0x1F	; 31
     ada:	01 97       	sbiw	r24, 0x01	; 1
     adc:	f1 f7       	brne	.-4      	; 0xada <ServoGoToAngle+0x82>
     ade:	00 c0       	rjmp	.+0      	; 0xae0 <ServoGoToAngle+0x88>
     ae0:	00 00       	nop
		_delay_us(2000);      //Rotation to 0 degree
		DIO_SetPinVal(SERVO_PORT,SERVO_PIN,DIO_PIN_LOW);         //Rotation to 0 degree
     ae2:	40 e0       	ldi	r20, 0x00	; 0
     ae4:	60 e0       	ldi	r22, 0x00	; 0
     ae6:	82 e0       	ldi	r24, 0x02	; 2
     ae8:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     aec:	9f ef       	ldi	r25, 0xFF	; 255
     aee:	29 e6       	ldi	r18, 0x69	; 105
     af0:	88 e1       	ldi	r24, 0x18	; 24
     af2:	91 50       	subi	r25, 0x01	; 1
     af4:	20 40       	sbci	r18, 0x00	; 0
     af6:	80 40       	sbci	r24, 0x00	; 0
     af8:	e1 f7       	brne	.-8      	; 0xaf2 <ServoGoToAngle+0x9a>
     afa:	00 c0       	rjmp	.+0      	; 0xafc <ServoGoToAngle+0xa4>
     afc:	00 00       	nop
     afe:	08 95       	ret

00000b00 <ServoInit>:
 */ 
#include "Servo.h"

void ServoInit(void)
{
  DIO_SetPinDir(SERVO_PORT,SERVO_PIN,DIO_PIN_DIR_OUTPUT);         
     b00:	41 e0       	ldi	r20, 0x01	; 1
     b02:	60 e0       	ldi	r22, 0x00	; 0
     b04:	82 e0       	ldi	r24, 0x02	; 2
     b06:	0e 94 72 00 	call	0xe4	; 0xe4 <DIO_SetPinDir>
  DIO_SetPinVal(SERVO_PORT,SERVO_PIN,DIO_PIN_LOW);
     b0a:	40 e0       	ldi	r20, 0x00	; 0
     b0c:	60 e0       	ldi	r22, 0x00	; 0
     b0e:	82 e0       	ldi	r24, 0x02	; 2
     b10:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
  ServoGoToAngle(0);    
     b14:	80 e0       	ldi	r24, 0x00	; 0
     b16:	0e 94 2c 05 	call	0xa58	; 0xa58 <ServoGoToAngle>
     b1a:	08 95       	ret

00000b1c <Timer_Init>:
	 Init_Value = 256 - (Total_Ticks % 256);
	
	TCCR0 = Init_Value;
	
	N_OVFlows++;
}
     b1c:	fc 01       	movw	r30, r24
     b1e:	9f b7       	in	r25, 0x3f	; 63
     b20:	90 68       	ori	r25, 0x80	; 128
     b22:	9f bf       	out	0x3f, r25	; 63
     b24:	80 81       	ld	r24, Z
     b26:	81 11       	cpse	r24, r1
     b28:	98 c0       	rjmp	.+304    	; 0xc5a <Timer_Init+0x13e>
     b2a:	81 81       	ldd	r24, Z+1	; 0x01
     b2c:	81 11       	cpse	r24, r1
     b2e:	0a c0       	rjmp	.+20     	; 0xb44 <Timer_Init+0x28>
     b30:	89 b7       	in	r24, 0x39	; 57
     b32:	81 60       	ori	r24, 0x01	; 1
     b34:	89 bf       	out	0x39, r24	; 57
     b36:	83 b7       	in	r24, 0x33	; 51
     b38:	87 7f       	andi	r24, 0xF7	; 247
     b3a:	83 bf       	out	0x33, r24	; 51
     b3c:	83 b7       	in	r24, 0x33	; 51
     b3e:	8f 7b       	andi	r24, 0xBF	; 191
     b40:	83 bf       	out	0x33, r24	; 51
     b42:	08 95       	ret
     b44:	81 30       	cpi	r24, 0x01	; 1
     b46:	61 f5       	brne	.+88     	; 0xba0 <Timer_Init+0x84>
     b48:	83 b7       	in	r24, 0x33	; 51
     b4a:	88 60       	ori	r24, 0x08	; 8
     b4c:	83 bf       	out	0x33, r24	; 51
     b4e:	83 b7       	in	r24, 0x33	; 51
     b50:	8f 7b       	andi	r24, 0xBF	; 191
     b52:	83 bf       	out	0x33, r24	; 51
     b54:	80 85       	ldd	r24, Z+8	; 0x08
     b56:	81 11       	cpse	r24, r1
     b58:	07 c0       	rjmp	.+14     	; 0xb68 <Timer_Init+0x4c>
     b5a:	83 b7       	in	r24, 0x33	; 51
     b5c:	8f 7e       	andi	r24, 0xEF	; 239
     b5e:	83 bf       	out	0x33, r24	; 51
     b60:	83 b7       	in	r24, 0x33	; 51
     b62:	8f 7d       	andi	r24, 0xDF	; 223
     b64:	83 bf       	out	0x33, r24	; 51
     b66:	08 95       	ret
     b68:	81 30       	cpi	r24, 0x01	; 1
     b6a:	39 f4       	brne	.+14     	; 0xb7a <Timer_Init+0x5e>
     b6c:	83 b7       	in	r24, 0x33	; 51
     b6e:	80 61       	ori	r24, 0x10	; 16
     b70:	83 bf       	out	0x33, r24	; 51
     b72:	83 b7       	in	r24, 0x33	; 51
     b74:	8f 7d       	andi	r24, 0xDF	; 223
     b76:	83 bf       	out	0x33, r24	; 51
     b78:	08 95       	ret
     b7a:	82 30       	cpi	r24, 0x02	; 2
     b7c:	39 f4       	brne	.+14     	; 0xb8c <Timer_Init+0x70>
     b7e:	83 b7       	in	r24, 0x33	; 51
     b80:	80 62       	ori	r24, 0x20	; 32
     b82:	83 bf       	out	0x33, r24	; 51
     b84:	83 b7       	in	r24, 0x33	; 51
     b86:	8f 7e       	andi	r24, 0xEF	; 239
     b88:	83 bf       	out	0x33, r24	; 51
     b8a:	08 95       	ret
     b8c:	83 30       	cpi	r24, 0x03	; 3
     b8e:	09 f0       	breq	.+2      	; 0xb92 <Timer_Init+0x76>
     b90:	bc c1       	rjmp	.+888    	; 0xf0a <Timer_Init+0x3ee>
     b92:	83 b7       	in	r24, 0x33	; 51
     b94:	80 61       	ori	r24, 0x10	; 16
     b96:	83 bf       	out	0x33, r24	; 51
     b98:	83 b7       	in	r24, 0x33	; 51
     b9a:	80 62       	ori	r24, 0x20	; 32
     b9c:	83 bf       	out	0x33, r24	; 51
     b9e:	08 95       	ret
     ba0:	82 30       	cpi	r24, 0x02	; 2
     ba2:	61 f5       	brne	.+88     	; 0xbfc <Timer_Init+0xe0>
     ba4:	83 b7       	in	r24, 0x33	; 51
     ba6:	80 64       	ori	r24, 0x40	; 64
     ba8:	83 bf       	out	0x33, r24	; 51
     baa:	83 b7       	in	r24, 0x33	; 51
     bac:	87 7f       	andi	r24, 0xF7	; 247
     bae:	83 bf       	out	0x33, r24	; 51
     bb0:	81 85       	ldd	r24, Z+9	; 0x09
     bb2:	81 11       	cpse	r24, r1
     bb4:	07 c0       	rjmp	.+14     	; 0xbc4 <Timer_Init+0xa8>
     bb6:	83 b7       	in	r24, 0x33	; 51
     bb8:	8f 7e       	andi	r24, 0xEF	; 239
     bba:	83 bf       	out	0x33, r24	; 51
     bbc:	83 b7       	in	r24, 0x33	; 51
     bbe:	8f 7d       	andi	r24, 0xDF	; 223
     bc0:	83 bf       	out	0x33, r24	; 51
     bc2:	08 95       	ret
     bc4:	81 30       	cpi	r24, 0x01	; 1
     bc6:	39 f4       	brne	.+14     	; 0xbd6 <Timer_Init+0xba>
     bc8:	83 b7       	in	r24, 0x33	; 51
     bca:	80 61       	ori	r24, 0x10	; 16
     bcc:	83 bf       	out	0x33, r24	; 51
     bce:	83 b7       	in	r24, 0x33	; 51
     bd0:	8f 7d       	andi	r24, 0xDF	; 223
     bd2:	83 bf       	out	0x33, r24	; 51
     bd4:	08 95       	ret
     bd6:	82 30       	cpi	r24, 0x02	; 2
     bd8:	39 f4       	brne	.+14     	; 0xbe8 <Timer_Init+0xcc>
     bda:	83 b7       	in	r24, 0x33	; 51
     bdc:	80 62       	ori	r24, 0x20	; 32
     bde:	83 bf       	out	0x33, r24	; 51
     be0:	83 b7       	in	r24, 0x33	; 51
     be2:	8f 7e       	andi	r24, 0xEF	; 239
     be4:	83 bf       	out	0x33, r24	; 51
     be6:	08 95       	ret
     be8:	83 30       	cpi	r24, 0x03	; 3
     bea:	09 f0       	breq	.+2      	; 0xbee <Timer_Init+0xd2>
     bec:	8e c1       	rjmp	.+796    	; 0xf0a <Timer_Init+0x3ee>
     bee:	83 b7       	in	r24, 0x33	; 51
     bf0:	80 61       	ori	r24, 0x10	; 16
     bf2:	83 bf       	out	0x33, r24	; 51
     bf4:	83 b7       	in	r24, 0x33	; 51
     bf6:	80 62       	ori	r24, 0x20	; 32
     bf8:	83 bf       	out	0x33, r24	; 51
     bfa:	08 95       	ret
     bfc:	83 30       	cpi	r24, 0x03	; 3
     bfe:	09 f0       	breq	.+2      	; 0xc02 <Timer_Init+0xe6>
     c00:	84 c1       	rjmp	.+776    	; 0xf0a <Timer_Init+0x3ee>
     c02:	83 b7       	in	r24, 0x33	; 51
     c04:	88 60       	ori	r24, 0x08	; 8
     c06:	83 bf       	out	0x33, r24	; 51
     c08:	83 b7       	in	r24, 0x33	; 51
     c0a:	80 64       	ori	r24, 0x40	; 64
     c0c:	83 bf       	out	0x33, r24	; 51
     c0e:	81 85       	ldd	r24, Z+9	; 0x09
     c10:	81 11       	cpse	r24, r1
     c12:	07 c0       	rjmp	.+14     	; 0xc22 <Timer_Init+0x106>
     c14:	83 b7       	in	r24, 0x33	; 51
     c16:	8f 7e       	andi	r24, 0xEF	; 239
     c18:	83 bf       	out	0x33, r24	; 51
     c1a:	83 b7       	in	r24, 0x33	; 51
     c1c:	8f 7d       	andi	r24, 0xDF	; 223
     c1e:	83 bf       	out	0x33, r24	; 51
     c20:	08 95       	ret
     c22:	81 30       	cpi	r24, 0x01	; 1
     c24:	39 f4       	brne	.+14     	; 0xc34 <Timer_Init+0x118>
     c26:	83 b7       	in	r24, 0x33	; 51
     c28:	80 61       	ori	r24, 0x10	; 16
     c2a:	83 bf       	out	0x33, r24	; 51
     c2c:	83 b7       	in	r24, 0x33	; 51
     c2e:	8f 7d       	andi	r24, 0xDF	; 223
     c30:	83 bf       	out	0x33, r24	; 51
     c32:	08 95       	ret
     c34:	82 30       	cpi	r24, 0x02	; 2
     c36:	39 f4       	brne	.+14     	; 0xc46 <Timer_Init+0x12a>
     c38:	83 b7       	in	r24, 0x33	; 51
     c3a:	80 62       	ori	r24, 0x20	; 32
     c3c:	83 bf       	out	0x33, r24	; 51
     c3e:	83 b7       	in	r24, 0x33	; 51
     c40:	8f 7e       	andi	r24, 0xEF	; 239
     c42:	83 bf       	out	0x33, r24	; 51
     c44:	08 95       	ret
     c46:	83 30       	cpi	r24, 0x03	; 3
     c48:	09 f0       	breq	.+2      	; 0xc4c <Timer_Init+0x130>
     c4a:	5f c1       	rjmp	.+702    	; 0xf0a <Timer_Init+0x3ee>
     c4c:	83 b7       	in	r24, 0x33	; 51
     c4e:	80 61       	ori	r24, 0x10	; 16
     c50:	83 bf       	out	0x33, r24	; 51
     c52:	83 b7       	in	r24, 0x33	; 51
     c54:	80 62       	ori	r24, 0x20	; 32
     c56:	83 bf       	out	0x33, r24	; 51
     c58:	08 95       	ret
     c5a:	81 30       	cpi	r24, 0x01	; 1
     c5c:	09 f0       	breq	.+2      	; 0xc60 <Timer_Init+0x144>
     c5e:	c1 c0       	rjmp	.+386    	; 0xde2 <Timer_Init+0x2c6>
     c60:	81 81       	ldd	r24, Z+1	; 0x01
     c62:	81 11       	cpse	r24, r1
     c64:	02 c0       	rjmp	.+4      	; 0xc6a <Timer_Init+0x14e>
     c66:	1f bc       	out	0x2f, r1	; 47
     c68:	08 95       	ret
     c6a:	81 30       	cpi	r24, 0x01	; 1
     c6c:	21 f4       	brne	.+8      	; 0xc76 <Timer_Init+0x15a>
     c6e:	89 b7       	in	r24, 0x39	; 57
     c70:	80 62       	ori	r24, 0x20	; 32
     c72:	89 bf       	out	0x39, r24	; 57
     c74:	08 95       	ret
     c76:	82 30       	cpi	r24, 0x02	; 2
     c78:	09 f0       	breq	.+2      	; 0xc7c <Timer_Init+0x160>
     c7a:	55 c0       	rjmp	.+170    	; 0xd26 <Timer_Init+0x20a>
     c7c:	8f b5       	in	r24, 0x2f	; 47
     c7e:	81 60       	ori	r24, 0x01	; 1
     c80:	8f bd       	out	0x2f, r24	; 47
     c82:	80 85       	ldd	r24, Z+8	; 0x08
     c84:	81 11       	cpse	r24, r1
     c86:	26 c0       	rjmp	.+76     	; 0xcd4 <Timer_Init+0x1b8>
     c88:	81 85       	ldd	r24, Z+9	; 0x09
     c8a:	81 11       	cpse	r24, r1
     c8c:	07 c0       	rjmp	.+14     	; 0xc9c <Timer_Init+0x180>
     c8e:	8f b5       	in	r24, 0x2f	; 47
     c90:	8f 7e       	andi	r24, 0xEF	; 239
     c92:	8f bd       	out	0x2f, r24	; 47
     c94:	8f b5       	in	r24, 0x2f	; 47
     c96:	8f 7d       	andi	r24, 0xDF	; 223
     c98:	8f bd       	out	0x2f, r24	; 47
     c9a:	08 95       	ret
     c9c:	81 30       	cpi	r24, 0x01	; 1
     c9e:	39 f4       	brne	.+14     	; 0xcae <Timer_Init+0x192>
     ca0:	8f b5       	in	r24, 0x2f	; 47
     ca2:	80 61       	ori	r24, 0x10	; 16
     ca4:	8f bd       	out	0x2f, r24	; 47
     ca6:	8f b5       	in	r24, 0x2f	; 47
     ca8:	8f 7d       	andi	r24, 0xDF	; 223
     caa:	8f bd       	out	0x2f, r24	; 47
     cac:	08 95       	ret
     cae:	82 30       	cpi	r24, 0x02	; 2
     cb0:	39 f4       	brne	.+14     	; 0xcc0 <Timer_Init+0x1a4>
     cb2:	8f b5       	in	r24, 0x2f	; 47
     cb4:	80 62       	ori	r24, 0x20	; 32
     cb6:	8f bd       	out	0x2f, r24	; 47
     cb8:	8f b5       	in	r24, 0x2f	; 47
     cba:	8f 7e       	andi	r24, 0xEF	; 239
     cbc:	8f bd       	out	0x2f, r24	; 47
     cbe:	08 95       	ret
     cc0:	83 30       	cpi	r24, 0x03	; 3
     cc2:	09 f0       	breq	.+2      	; 0xcc6 <Timer_Init+0x1aa>
     cc4:	22 c1       	rjmp	.+580    	; 0xf0a <Timer_Init+0x3ee>
     cc6:	8f b5       	in	r24, 0x2f	; 47
     cc8:	80 61       	ori	r24, 0x10	; 16
     cca:	8f bd       	out	0x2f, r24	; 47
     ccc:	8f b5       	in	r24, 0x2f	; 47
     cce:	80 62       	ori	r24, 0x20	; 32
     cd0:	8f bd       	out	0x2f, r24	; 47
     cd2:	08 95       	ret
     cd4:	81 30       	cpi	r24, 0x01	; 1
     cd6:	09 f0       	breq	.+2      	; 0xcda <Timer_Init+0x1be>
     cd8:	18 c1       	rjmp	.+560    	; 0xf0a <Timer_Init+0x3ee>
     cda:	81 85       	ldd	r24, Z+9	; 0x09
     cdc:	81 11       	cpse	r24, r1
     cde:	07 c0       	rjmp	.+14     	; 0xcee <Timer_Init+0x1d2>
     ce0:	8f b5       	in	r24, 0x2f	; 47
     ce2:	8f 7b       	andi	r24, 0xBF	; 191
     ce4:	8f bd       	out	0x2f, r24	; 47
     ce6:	8f b5       	in	r24, 0x2f	; 47
     ce8:	8f 77       	andi	r24, 0x7F	; 127
     cea:	8f bd       	out	0x2f, r24	; 47
     cec:	08 95       	ret
     cee:	81 30       	cpi	r24, 0x01	; 1
     cf0:	39 f4       	brne	.+14     	; 0xd00 <Timer_Init+0x1e4>
     cf2:	8f b5       	in	r24, 0x2f	; 47
     cf4:	80 64       	ori	r24, 0x40	; 64
     cf6:	8f bd       	out	0x2f, r24	; 47
     cf8:	8f b5       	in	r24, 0x2f	; 47
     cfa:	8f 77       	andi	r24, 0x7F	; 127
     cfc:	8f bd       	out	0x2f, r24	; 47
     cfe:	08 95       	ret
     d00:	82 30       	cpi	r24, 0x02	; 2
     d02:	39 f4       	brne	.+14     	; 0xd12 <Timer_Init+0x1f6>
     d04:	8f b5       	in	r24, 0x2f	; 47
     d06:	80 68       	ori	r24, 0x80	; 128
     d08:	8f bd       	out	0x2f, r24	; 47
     d0a:	8f b5       	in	r24, 0x2f	; 47
     d0c:	8f 7b       	andi	r24, 0xBF	; 191
     d0e:	8f bd       	out	0x2f, r24	; 47
     d10:	08 95       	ret
     d12:	83 30       	cpi	r24, 0x03	; 3
     d14:	09 f0       	breq	.+2      	; 0xd18 <Timer_Init+0x1fc>
     d16:	f9 c0       	rjmp	.+498    	; 0xf0a <Timer_Init+0x3ee>
     d18:	8f b5       	in	r24, 0x2f	; 47
     d1a:	80 64       	ori	r24, 0x40	; 64
     d1c:	8f bd       	out	0x2f, r24	; 47
     d1e:	8f b5       	in	r24, 0x2f	; 47
     d20:	80 68       	ori	r24, 0x80	; 128
     d22:	8f bd       	out	0x2f, r24	; 47
     d24:	08 95       	ret
     d26:	83 30       	cpi	r24, 0x03	; 3
     d28:	09 f0       	breq	.+2      	; 0xd2c <Timer_Init+0x210>
     d2a:	ef c0       	rjmp	.+478    	; 0xf0a <Timer_Init+0x3ee>
     d2c:	8f b5       	in	r24, 0x2f	; 47
     d2e:	81 60       	ori	r24, 0x01	; 1
     d30:	8f bd       	out	0x2f, r24	; 47
     d32:	8f b5       	in	r24, 0x2f	; 47
     d34:	8d 7f       	andi	r24, 0xFD	; 253
     d36:	8f bd       	out	0x2f, r24	; 47
     d38:	8e b5       	in	r24, 0x2e	; 46
     d3a:	88 60       	ori	r24, 0x08	; 8
     d3c:	8e bd       	out	0x2e, r24	; 46
     d3e:	80 85       	ldd	r24, Z+8	; 0x08
     d40:	81 11       	cpse	r24, r1
     d42:	26 c0       	rjmp	.+76     	; 0xd90 <Timer_Init+0x274>
     d44:	81 85       	ldd	r24, Z+9	; 0x09
     d46:	81 11       	cpse	r24, r1
     d48:	07 c0       	rjmp	.+14     	; 0xd58 <Timer_Init+0x23c>
     d4a:	8f b5       	in	r24, 0x2f	; 47
     d4c:	8f 7e       	andi	r24, 0xEF	; 239
     d4e:	8f bd       	out	0x2f, r24	; 47
     d50:	8f b5       	in	r24, 0x2f	; 47
     d52:	8f 7d       	andi	r24, 0xDF	; 223
     d54:	8f bd       	out	0x2f, r24	; 47
     d56:	08 95       	ret
     d58:	81 30       	cpi	r24, 0x01	; 1
     d5a:	39 f4       	brne	.+14     	; 0xd6a <Timer_Init+0x24e>
     d5c:	8f b5       	in	r24, 0x2f	; 47
     d5e:	80 61       	ori	r24, 0x10	; 16
     d60:	8f bd       	out	0x2f, r24	; 47
     d62:	8f b5       	in	r24, 0x2f	; 47
     d64:	8f 7d       	andi	r24, 0xDF	; 223
     d66:	8f bd       	out	0x2f, r24	; 47
     d68:	08 95       	ret
     d6a:	82 30       	cpi	r24, 0x02	; 2
     d6c:	39 f4       	brne	.+14     	; 0xd7c <Timer_Init+0x260>
     d6e:	8f b5       	in	r24, 0x2f	; 47
     d70:	80 62       	ori	r24, 0x20	; 32
     d72:	8f bd       	out	0x2f, r24	; 47
     d74:	8f b5       	in	r24, 0x2f	; 47
     d76:	8f 7e       	andi	r24, 0xEF	; 239
     d78:	8f bd       	out	0x2f, r24	; 47
     d7a:	08 95       	ret
     d7c:	83 30       	cpi	r24, 0x03	; 3
     d7e:	09 f0       	breq	.+2      	; 0xd82 <Timer_Init+0x266>
     d80:	c4 c0       	rjmp	.+392    	; 0xf0a <Timer_Init+0x3ee>
     d82:	8f b5       	in	r24, 0x2f	; 47
     d84:	80 61       	ori	r24, 0x10	; 16
     d86:	8f bd       	out	0x2f, r24	; 47
     d88:	8f b5       	in	r24, 0x2f	; 47
     d8a:	80 62       	ori	r24, 0x20	; 32
     d8c:	8f bd       	out	0x2f, r24	; 47
     d8e:	08 95       	ret
     d90:	81 30       	cpi	r24, 0x01	; 1
     d92:	09 f0       	breq	.+2      	; 0xd96 <Timer_Init+0x27a>
     d94:	ba c0       	rjmp	.+372    	; 0xf0a <Timer_Init+0x3ee>
     d96:	81 85       	ldd	r24, Z+9	; 0x09
     d98:	81 11       	cpse	r24, r1
     d9a:	07 c0       	rjmp	.+14     	; 0xdaa <Timer_Init+0x28e>
     d9c:	8f b5       	in	r24, 0x2f	; 47
     d9e:	8f 7b       	andi	r24, 0xBF	; 191
     da0:	8f bd       	out	0x2f, r24	; 47
     da2:	8f b5       	in	r24, 0x2f	; 47
     da4:	8f 77       	andi	r24, 0x7F	; 127
     da6:	8f bd       	out	0x2f, r24	; 47
     da8:	08 95       	ret
     daa:	81 30       	cpi	r24, 0x01	; 1
     dac:	39 f4       	brne	.+14     	; 0xdbc <Timer_Init+0x2a0>
     dae:	8f b5       	in	r24, 0x2f	; 47
     db0:	80 64       	ori	r24, 0x40	; 64
     db2:	8f bd       	out	0x2f, r24	; 47
     db4:	8f b5       	in	r24, 0x2f	; 47
     db6:	8f 77       	andi	r24, 0x7F	; 127
     db8:	8f bd       	out	0x2f, r24	; 47
     dba:	08 95       	ret
     dbc:	82 30       	cpi	r24, 0x02	; 2
     dbe:	39 f4       	brne	.+14     	; 0xdce <Timer_Init+0x2b2>
     dc0:	8f b5       	in	r24, 0x2f	; 47
     dc2:	80 68       	ori	r24, 0x80	; 128
     dc4:	8f bd       	out	0x2f, r24	; 47
     dc6:	8f b5       	in	r24, 0x2f	; 47
     dc8:	8f 7b       	andi	r24, 0xBF	; 191
     dca:	8f bd       	out	0x2f, r24	; 47
     dcc:	08 95       	ret
     dce:	83 30       	cpi	r24, 0x03	; 3
     dd0:	09 f0       	breq	.+2      	; 0xdd4 <Timer_Init+0x2b8>
     dd2:	9b c0       	rjmp	.+310    	; 0xf0a <Timer_Init+0x3ee>
     dd4:	8f b5       	in	r24, 0x2f	; 47
     dd6:	80 64       	ori	r24, 0x40	; 64
     dd8:	8f bd       	out	0x2f, r24	; 47
     dda:	8f b5       	in	r24, 0x2f	; 47
     ddc:	80 68       	ori	r24, 0x80	; 128
     dde:	8f bd       	out	0x2f, r24	; 47
     de0:	08 95       	ret
     de2:	82 30       	cpi	r24, 0x02	; 2
     de4:	09 f0       	breq	.+2      	; 0xde8 <Timer_Init+0x2cc>
     de6:	91 c0       	rjmp	.+290    	; 0xf0a <Timer_Init+0x3ee>
     de8:	81 81       	ldd	r24, Z+1	; 0x01
     dea:	81 11       	cpse	r24, r1
     dec:	07 c0       	rjmp	.+14     	; 0xdfc <Timer_Init+0x2e0>
     dee:	85 b5       	in	r24, 0x25	; 37
     df0:	87 7f       	andi	r24, 0xF7	; 247
     df2:	85 bd       	out	0x25, r24	; 37
     df4:	85 b5       	in	r24, 0x25	; 37
     df6:	8f 7b       	andi	r24, 0xBF	; 191
     df8:	85 bd       	out	0x25, r24	; 37
     dfa:	08 95       	ret
     dfc:	81 30       	cpi	r24, 0x01	; 1
     dfe:	61 f5       	brne	.+88     	; 0xe58 <Timer_Init+0x33c>
     e00:	85 b5       	in	r24, 0x25	; 37
     e02:	88 60       	ori	r24, 0x08	; 8
     e04:	85 bd       	out	0x25, r24	; 37
     e06:	85 b5       	in	r24, 0x25	; 37
     e08:	8f 7b       	andi	r24, 0xBF	; 191
     e0a:	85 bd       	out	0x25, r24	; 37
     e0c:	80 85       	ldd	r24, Z+8	; 0x08
     e0e:	81 11       	cpse	r24, r1
     e10:	07 c0       	rjmp	.+14     	; 0xe20 <Timer_Init+0x304>
     e12:	85 b5       	in	r24, 0x25	; 37
     e14:	8f 7e       	andi	r24, 0xEF	; 239
     e16:	85 bd       	out	0x25, r24	; 37
     e18:	85 b5       	in	r24, 0x25	; 37
     e1a:	8f 7d       	andi	r24, 0xDF	; 223
     e1c:	85 bd       	out	0x25, r24	; 37
     e1e:	08 95       	ret
     e20:	81 30       	cpi	r24, 0x01	; 1
     e22:	39 f4       	brne	.+14     	; 0xe32 <Timer_Init+0x316>
     e24:	85 b5       	in	r24, 0x25	; 37
     e26:	80 61       	ori	r24, 0x10	; 16
     e28:	85 bd       	out	0x25, r24	; 37
     e2a:	85 b5       	in	r24, 0x25	; 37
     e2c:	8f 7d       	andi	r24, 0xDF	; 223
     e2e:	85 bd       	out	0x25, r24	; 37
     e30:	08 95       	ret
     e32:	82 30       	cpi	r24, 0x02	; 2
     e34:	39 f4       	brne	.+14     	; 0xe44 <Timer_Init+0x328>
     e36:	85 b5       	in	r24, 0x25	; 37
     e38:	80 62       	ori	r24, 0x20	; 32
     e3a:	85 bd       	out	0x25, r24	; 37
     e3c:	85 b5       	in	r24, 0x25	; 37
     e3e:	8f 7e       	andi	r24, 0xEF	; 239
     e40:	85 bd       	out	0x25, r24	; 37
     e42:	08 95       	ret
     e44:	83 30       	cpi	r24, 0x03	; 3
     e46:	09 f0       	breq	.+2      	; 0xe4a <Timer_Init+0x32e>
     e48:	60 c0       	rjmp	.+192    	; 0xf0a <Timer_Init+0x3ee>
     e4a:	85 b5       	in	r24, 0x25	; 37
     e4c:	80 61       	ori	r24, 0x10	; 16
     e4e:	85 bd       	out	0x25, r24	; 37
     e50:	85 b5       	in	r24, 0x25	; 37
     e52:	80 62       	ori	r24, 0x20	; 32
     e54:	85 bd       	out	0x25, r24	; 37
     e56:	08 95       	ret
     e58:	82 30       	cpi	r24, 0x02	; 2
     e5a:	59 f5       	brne	.+86     	; 0xeb2 <Timer_Init+0x396>
     e5c:	85 b5       	in	r24, 0x25	; 37
     e5e:	80 64       	ori	r24, 0x40	; 64
     e60:	85 bd       	out	0x25, r24	; 37
     e62:	85 b5       	in	r24, 0x25	; 37
     e64:	87 7f       	andi	r24, 0xF7	; 247
     e66:	85 bd       	out	0x25, r24	; 37
     e68:	81 85       	ldd	r24, Z+9	; 0x09
     e6a:	81 11       	cpse	r24, r1
     e6c:	07 c0       	rjmp	.+14     	; 0xe7c <Timer_Init+0x360>
     e6e:	85 b5       	in	r24, 0x25	; 37
     e70:	8f 7e       	andi	r24, 0xEF	; 239
     e72:	85 bd       	out	0x25, r24	; 37
     e74:	85 b5       	in	r24, 0x25	; 37
     e76:	8f 7d       	andi	r24, 0xDF	; 223
     e78:	85 bd       	out	0x25, r24	; 37
     e7a:	08 95       	ret
     e7c:	81 30       	cpi	r24, 0x01	; 1
     e7e:	39 f4       	brne	.+14     	; 0xe8e <Timer_Init+0x372>
     e80:	85 b5       	in	r24, 0x25	; 37
     e82:	80 61       	ori	r24, 0x10	; 16
     e84:	85 bd       	out	0x25, r24	; 37
     e86:	85 b5       	in	r24, 0x25	; 37
     e88:	8f 7d       	andi	r24, 0xDF	; 223
     e8a:	85 bd       	out	0x25, r24	; 37
     e8c:	08 95       	ret
     e8e:	82 30       	cpi	r24, 0x02	; 2
     e90:	39 f4       	brne	.+14     	; 0xea0 <Timer_Init+0x384>
     e92:	85 b5       	in	r24, 0x25	; 37
     e94:	80 62       	ori	r24, 0x20	; 32
     e96:	85 bd       	out	0x25, r24	; 37
     e98:	85 b5       	in	r24, 0x25	; 37
     e9a:	8f 7e       	andi	r24, 0xEF	; 239
     e9c:	85 bd       	out	0x25, r24	; 37
     e9e:	08 95       	ret
     ea0:	83 30       	cpi	r24, 0x03	; 3
     ea2:	99 f5       	brne	.+102    	; 0xf0a <Timer_Init+0x3ee>
     ea4:	85 b5       	in	r24, 0x25	; 37
     ea6:	80 61       	ori	r24, 0x10	; 16
     ea8:	85 bd       	out	0x25, r24	; 37
     eaa:	85 b5       	in	r24, 0x25	; 37
     eac:	80 62       	ori	r24, 0x20	; 32
     eae:	85 bd       	out	0x25, r24	; 37
     eb0:	08 95       	ret
     eb2:	83 30       	cpi	r24, 0x03	; 3
     eb4:	51 f5       	brne	.+84     	; 0xf0a <Timer_Init+0x3ee>
     eb6:	85 b5       	in	r24, 0x25	; 37
     eb8:	88 60       	ori	r24, 0x08	; 8
     eba:	85 bd       	out	0x25, r24	; 37
     ebc:	85 b5       	in	r24, 0x25	; 37
     ebe:	80 64       	ori	r24, 0x40	; 64
     ec0:	85 bd       	out	0x25, r24	; 37
     ec2:	81 85       	ldd	r24, Z+9	; 0x09
     ec4:	81 11       	cpse	r24, r1
     ec6:	07 c0       	rjmp	.+14     	; 0xed6 <Timer_Init+0x3ba>
     ec8:	85 b5       	in	r24, 0x25	; 37
     eca:	8f 7e       	andi	r24, 0xEF	; 239
     ecc:	85 bd       	out	0x25, r24	; 37
     ece:	85 b5       	in	r24, 0x25	; 37
     ed0:	8f 7d       	andi	r24, 0xDF	; 223
     ed2:	85 bd       	out	0x25, r24	; 37
     ed4:	08 95       	ret
     ed6:	81 30       	cpi	r24, 0x01	; 1
     ed8:	39 f4       	brne	.+14     	; 0xee8 <Timer_Init+0x3cc>
     eda:	85 b5       	in	r24, 0x25	; 37
     edc:	80 61       	ori	r24, 0x10	; 16
     ede:	85 bd       	out	0x25, r24	; 37
     ee0:	85 b5       	in	r24, 0x25	; 37
     ee2:	8f 7d       	andi	r24, 0xDF	; 223
     ee4:	85 bd       	out	0x25, r24	; 37
     ee6:	08 95       	ret
     ee8:	82 30       	cpi	r24, 0x02	; 2
     eea:	39 f4       	brne	.+14     	; 0xefa <Timer_Init+0x3de>
     eec:	85 b5       	in	r24, 0x25	; 37
     eee:	80 62       	ori	r24, 0x20	; 32
     ef0:	85 bd       	out	0x25, r24	; 37
     ef2:	85 b5       	in	r24, 0x25	; 37
     ef4:	8f 7e       	andi	r24, 0xEF	; 239
     ef6:	85 bd       	out	0x25, r24	; 37
     ef8:	08 95       	ret
     efa:	83 30       	cpi	r24, 0x03	; 3
     efc:	31 f4       	brne	.+12     	; 0xf0a <Timer_Init+0x3ee>
     efe:	85 b5       	in	r24, 0x25	; 37
     f00:	80 61       	ori	r24, 0x10	; 16
     f02:	85 bd       	out	0x25, r24	; 37
     f04:	85 b5       	in	r24, 0x25	; 37
     f06:	80 62       	ori	r24, 0x20	; 32
     f08:	85 bd       	out	0x25, r24	; 37
     f0a:	08 95       	ret

00000f0c <Timer_Start>:
     f0c:	fc 01       	movw	r30, r24
     f0e:	90 81       	ld	r25, Z
     f10:	91 11       	cpse	r25, r1
     f12:	45 c0       	rjmp	.+138    	; 0xf9e <Timer_Start+0x92>
     f14:	82 81       	ldd	r24, Z+2	; 0x02
     f16:	93 81       	ldd	r25, Z+3	; 0x03
     f18:	81 30       	cpi	r24, 0x01	; 1
     f1a:	91 05       	cpc	r25, r1
     f1c:	51 f4       	brne	.+20     	; 0xf32 <Timer_Start+0x26>
     f1e:	83 b7       	in	r24, 0x33	; 51
     f20:	81 60       	ori	r24, 0x01	; 1
     f22:	83 bf       	out	0x33, r24	; 51
     f24:	83 b7       	in	r24, 0x33	; 51
     f26:	8d 7f       	andi	r24, 0xFD	; 253
     f28:	83 bf       	out	0x33, r24	; 51
     f2a:	83 b7       	in	r24, 0x33	; 51
     f2c:	8b 7f       	andi	r24, 0xFB	; 251
     f2e:	83 bf       	out	0x33, r24	; 51
     f30:	08 95       	ret
     f32:	88 30       	cpi	r24, 0x08	; 8
     f34:	91 05       	cpc	r25, r1
     f36:	51 f4       	brne	.+20     	; 0xf4c <Timer_Start+0x40>
     f38:	83 b7       	in	r24, 0x33	; 51
     f3a:	8e 7f       	andi	r24, 0xFE	; 254
     f3c:	83 bf       	out	0x33, r24	; 51
     f3e:	83 b7       	in	r24, 0x33	; 51
     f40:	82 60       	ori	r24, 0x02	; 2
     f42:	83 bf       	out	0x33, r24	; 51
     f44:	83 b7       	in	r24, 0x33	; 51
     f46:	8b 7f       	andi	r24, 0xFB	; 251
     f48:	83 bf       	out	0x33, r24	; 51
     f4a:	08 95       	ret
     f4c:	80 34       	cpi	r24, 0x40	; 64
     f4e:	91 05       	cpc	r25, r1
     f50:	51 f4       	brne	.+20     	; 0xf66 <Timer_Start+0x5a>
     f52:	83 b7       	in	r24, 0x33	; 51
     f54:	81 60       	ori	r24, 0x01	; 1
     f56:	83 bf       	out	0x33, r24	; 51
     f58:	83 b7       	in	r24, 0x33	; 51
     f5a:	82 60       	ori	r24, 0x02	; 2
     f5c:	83 bf       	out	0x33, r24	; 51
     f5e:	83 b7       	in	r24, 0x33	; 51
     f60:	8b 7f       	andi	r24, 0xFB	; 251
     f62:	83 bf       	out	0x33, r24	; 51
     f64:	08 95       	ret
     f66:	81 15       	cp	r24, r1
     f68:	21 e0       	ldi	r18, 0x01	; 1
     f6a:	92 07       	cpc	r25, r18
     f6c:	51 f4       	brne	.+20     	; 0xf82 <Timer_Start+0x76>
     f6e:	83 b7       	in	r24, 0x33	; 51
     f70:	8e 7f       	andi	r24, 0xFE	; 254
     f72:	83 bf       	out	0x33, r24	; 51
     f74:	83 b7       	in	r24, 0x33	; 51
     f76:	8d 7f       	andi	r24, 0xFD	; 253
     f78:	83 bf       	out	0x33, r24	; 51
     f7a:	83 b7       	in	r24, 0x33	; 51
     f7c:	84 60       	ori	r24, 0x04	; 4
     f7e:	83 bf       	out	0x33, r24	; 51
     f80:	08 95       	ret
     f82:	81 15       	cp	r24, r1
     f84:	94 40       	sbci	r25, 0x04	; 4
     f86:	09 f0       	breq	.+2      	; 0xf8a <Timer_Start+0x7e>
     f88:	b2 c0       	rjmp	.+356    	; 0x10ee <Timer_Start+0x1e2>
     f8a:	83 b7       	in	r24, 0x33	; 51
     f8c:	81 60       	ori	r24, 0x01	; 1
     f8e:	83 bf       	out	0x33, r24	; 51
     f90:	83 b7       	in	r24, 0x33	; 51
     f92:	8d 7f       	andi	r24, 0xFD	; 253
     f94:	83 bf       	out	0x33, r24	; 51
     f96:	83 b7       	in	r24, 0x33	; 51
     f98:	84 60       	ori	r24, 0x04	; 4
     f9a:	83 bf       	out	0x33, r24	; 51
     f9c:	08 95       	ret
     f9e:	91 30       	cpi	r25, 0x01	; 1
     fa0:	09 f0       	breq	.+2      	; 0xfa4 <Timer_Start+0x98>
     fa2:	45 c0       	rjmp	.+138    	; 0x102e <Timer_Start+0x122>
     fa4:	82 81       	ldd	r24, Z+2	; 0x02
     fa6:	93 81       	ldd	r25, Z+3	; 0x03
     fa8:	81 30       	cpi	r24, 0x01	; 1
     faa:	91 05       	cpc	r25, r1
     fac:	51 f4       	brne	.+20     	; 0xfc2 <Timer_Start+0xb6>
     fae:	8e b5       	in	r24, 0x2e	; 46
     fb0:	81 60       	ori	r24, 0x01	; 1
     fb2:	8e bd       	out	0x2e, r24	; 46
     fb4:	8e b5       	in	r24, 0x2e	; 46
     fb6:	8d 7f       	andi	r24, 0xFD	; 253
     fb8:	8e bd       	out	0x2e, r24	; 46
     fba:	8e b5       	in	r24, 0x2e	; 46
     fbc:	8b 7f       	andi	r24, 0xFB	; 251
     fbe:	8e bd       	out	0x2e, r24	; 46
     fc0:	08 95       	ret
     fc2:	88 30       	cpi	r24, 0x08	; 8
     fc4:	91 05       	cpc	r25, r1
     fc6:	51 f4       	brne	.+20     	; 0xfdc <Timer_Start+0xd0>
     fc8:	8e b5       	in	r24, 0x2e	; 46
     fca:	8e 7f       	andi	r24, 0xFE	; 254
     fcc:	8e bd       	out	0x2e, r24	; 46
     fce:	8e b5       	in	r24, 0x2e	; 46
     fd0:	82 60       	ori	r24, 0x02	; 2
     fd2:	8e bd       	out	0x2e, r24	; 46
     fd4:	8e b5       	in	r24, 0x2e	; 46
     fd6:	8b 7f       	andi	r24, 0xFB	; 251
     fd8:	8e bd       	out	0x2e, r24	; 46
     fda:	08 95       	ret
     fdc:	80 34       	cpi	r24, 0x40	; 64
     fde:	91 05       	cpc	r25, r1
     fe0:	51 f4       	brne	.+20     	; 0xff6 <Timer_Start+0xea>
     fe2:	8e b5       	in	r24, 0x2e	; 46
     fe4:	81 60       	ori	r24, 0x01	; 1
     fe6:	8e bd       	out	0x2e, r24	; 46
     fe8:	8e b5       	in	r24, 0x2e	; 46
     fea:	82 60       	ori	r24, 0x02	; 2
     fec:	8e bd       	out	0x2e, r24	; 46
     fee:	8e b5       	in	r24, 0x2e	; 46
     ff0:	8b 7f       	andi	r24, 0xFB	; 251
     ff2:	8e bd       	out	0x2e, r24	; 46
     ff4:	08 95       	ret
     ff6:	81 15       	cp	r24, r1
     ff8:	21 e0       	ldi	r18, 0x01	; 1
     ffa:	92 07       	cpc	r25, r18
     ffc:	51 f4       	brne	.+20     	; 0x1012 <Timer_Start+0x106>
     ffe:	8e b5       	in	r24, 0x2e	; 46
    1000:	8e 7f       	andi	r24, 0xFE	; 254
    1002:	8e bd       	out	0x2e, r24	; 46
    1004:	8e b5       	in	r24, 0x2e	; 46
    1006:	8d 7f       	andi	r24, 0xFD	; 253
    1008:	8e bd       	out	0x2e, r24	; 46
    100a:	8e b5       	in	r24, 0x2e	; 46
    100c:	84 60       	ori	r24, 0x04	; 4
    100e:	8e bd       	out	0x2e, r24	; 46
    1010:	08 95       	ret
    1012:	81 15       	cp	r24, r1
    1014:	94 40       	sbci	r25, 0x04	; 4
    1016:	09 f0       	breq	.+2      	; 0x101a <Timer_Start+0x10e>
    1018:	6a c0       	rjmp	.+212    	; 0x10ee <Timer_Start+0x1e2>
    101a:	8e b5       	in	r24, 0x2e	; 46
    101c:	81 60       	ori	r24, 0x01	; 1
    101e:	8e bd       	out	0x2e, r24	; 46
    1020:	8e b5       	in	r24, 0x2e	; 46
    1022:	8d 7f       	andi	r24, 0xFD	; 253
    1024:	8e bd       	out	0x2e, r24	; 46
    1026:	8e b5       	in	r24, 0x2e	; 46
    1028:	84 60       	ori	r24, 0x04	; 4
    102a:	8e bd       	out	0x2e, r24	; 46
    102c:	08 95       	ret
    102e:	92 30       	cpi	r25, 0x02	; 2
    1030:	09 f0       	breq	.+2      	; 0x1034 <Timer_Start+0x128>
    1032:	5d c0       	rjmp	.+186    	; 0x10ee <Timer_Start+0x1e2>
    1034:	82 81       	ldd	r24, Z+2	; 0x02
    1036:	93 81       	ldd	r25, Z+3	; 0x03
    1038:	81 30       	cpi	r24, 0x01	; 1
    103a:	91 05       	cpc	r25, r1
    103c:	51 f4       	brne	.+20     	; 0x1052 <Timer_Start+0x146>
    103e:	85 b5       	in	r24, 0x25	; 37
    1040:	81 60       	ori	r24, 0x01	; 1
    1042:	85 bd       	out	0x25, r24	; 37
    1044:	85 b5       	in	r24, 0x25	; 37
    1046:	8d 7f       	andi	r24, 0xFD	; 253
    1048:	85 bd       	out	0x25, r24	; 37
    104a:	85 b5       	in	r24, 0x25	; 37
    104c:	8b 7f       	andi	r24, 0xFB	; 251
    104e:	85 bd       	out	0x25, r24	; 37
    1050:	08 95       	ret
    1052:	88 30       	cpi	r24, 0x08	; 8
    1054:	91 05       	cpc	r25, r1
    1056:	51 f4       	brne	.+20     	; 0x106c <Timer_Start+0x160>
    1058:	85 b5       	in	r24, 0x25	; 37
    105a:	8e 7f       	andi	r24, 0xFE	; 254
    105c:	85 bd       	out	0x25, r24	; 37
    105e:	85 b5       	in	r24, 0x25	; 37
    1060:	82 60       	ori	r24, 0x02	; 2
    1062:	85 bd       	out	0x25, r24	; 37
    1064:	85 b5       	in	r24, 0x25	; 37
    1066:	8b 7f       	andi	r24, 0xFB	; 251
    1068:	85 bd       	out	0x25, r24	; 37
    106a:	08 95       	ret
    106c:	80 32       	cpi	r24, 0x20	; 32
    106e:	91 05       	cpc	r25, r1
    1070:	51 f4       	brne	.+20     	; 0x1086 <Timer_Start+0x17a>
    1072:	85 b5       	in	r24, 0x25	; 37
    1074:	81 60       	ori	r24, 0x01	; 1
    1076:	85 bd       	out	0x25, r24	; 37
    1078:	85 b5       	in	r24, 0x25	; 37
    107a:	82 60       	ori	r24, 0x02	; 2
    107c:	85 bd       	out	0x25, r24	; 37
    107e:	85 b5       	in	r24, 0x25	; 37
    1080:	8b 7f       	andi	r24, 0xFB	; 251
    1082:	85 bd       	out	0x25, r24	; 37
    1084:	08 95       	ret
    1086:	80 34       	cpi	r24, 0x40	; 64
    1088:	91 05       	cpc	r25, r1
    108a:	51 f4       	brne	.+20     	; 0x10a0 <Timer_Start+0x194>
    108c:	85 b5       	in	r24, 0x25	; 37
    108e:	8e 7f       	andi	r24, 0xFE	; 254
    1090:	85 bd       	out	0x25, r24	; 37
    1092:	85 b5       	in	r24, 0x25	; 37
    1094:	8d 7f       	andi	r24, 0xFD	; 253
    1096:	85 bd       	out	0x25, r24	; 37
    1098:	85 b5       	in	r24, 0x25	; 37
    109a:	84 60       	ori	r24, 0x04	; 4
    109c:	85 bd       	out	0x25, r24	; 37
    109e:	08 95       	ret
    10a0:	80 38       	cpi	r24, 0x80	; 128
    10a2:	91 05       	cpc	r25, r1
    10a4:	51 f4       	brne	.+20     	; 0x10ba <Timer_Start+0x1ae>
    10a6:	85 b5       	in	r24, 0x25	; 37
    10a8:	81 60       	ori	r24, 0x01	; 1
    10aa:	85 bd       	out	0x25, r24	; 37
    10ac:	85 b5       	in	r24, 0x25	; 37
    10ae:	8d 7f       	andi	r24, 0xFD	; 253
    10b0:	85 bd       	out	0x25, r24	; 37
    10b2:	85 b5       	in	r24, 0x25	; 37
    10b4:	84 60       	ori	r24, 0x04	; 4
    10b6:	85 bd       	out	0x25, r24	; 37
    10b8:	08 95       	ret
    10ba:	81 15       	cp	r24, r1
    10bc:	21 e0       	ldi	r18, 0x01	; 1
    10be:	92 07       	cpc	r25, r18
    10c0:	51 f4       	brne	.+20     	; 0x10d6 <Timer_Start+0x1ca>
    10c2:	85 b5       	in	r24, 0x25	; 37
    10c4:	8e 7f       	andi	r24, 0xFE	; 254
    10c6:	85 bd       	out	0x25, r24	; 37
    10c8:	85 b5       	in	r24, 0x25	; 37
    10ca:	82 60       	ori	r24, 0x02	; 2
    10cc:	85 bd       	out	0x25, r24	; 37
    10ce:	85 b5       	in	r24, 0x25	; 37
    10d0:	84 60       	ori	r24, 0x04	; 4
    10d2:	85 bd       	out	0x25, r24	; 37
    10d4:	08 95       	ret
    10d6:	81 15       	cp	r24, r1
    10d8:	94 40       	sbci	r25, 0x04	; 4
    10da:	49 f4       	brne	.+18     	; 0x10ee <Timer_Start+0x1e2>
    10dc:	85 b5       	in	r24, 0x25	; 37
    10de:	81 60       	ori	r24, 0x01	; 1
    10e0:	85 bd       	out	0x25, r24	; 37
    10e2:	85 b5       	in	r24, 0x25	; 37
    10e4:	82 60       	ori	r24, 0x02	; 2
    10e6:	85 bd       	out	0x25, r24	; 37
    10e8:	85 b5       	in	r24, 0x25	; 37
    10ea:	84 60       	ori	r24, 0x04	; 4
    10ec:	85 bd       	out	0x25, r24	; 37
    10ee:	08 95       	ret

000010f0 <Timer_SetINTERUPPT>:
void Timer_SetINTERUPPT(TimerControl* TimerC,Uint32 InterruptSelect)
{
	if (TimerC -> TimerSelect == TIMER1)
    10f0:	fc 01       	movw	r30, r24
    10f2:	80 81       	ld	r24, Z
    10f4:	81 30       	cpi	r24, 0x01	; 1
    10f6:	19 f5       	brne	.+70     	; 0x113e <Timer_SetINTERUPPT+0x4e>
	{
		if (InterruptSelect == TIMER1_Input_Capture_Interrupt_En)
    10f8:	41 30       	cpi	r20, 0x01	; 1
    10fa:	51 05       	cpc	r21, r1
    10fc:	61 05       	cpc	r22, r1
    10fe:	71 05       	cpc	r23, r1
    1100:	21 f4       	brne	.+8      	; 0x110a <Timer_SetINTERUPPT+0x1a>
		{
			set_bit(TIMSK,5);
    1102:	89 b7       	in	r24, 0x39	; 57
    1104:	80 62       	ori	r24, 0x20	; 32
    1106:	89 bf       	out	0x39, r24	; 57
    1108:	08 95       	ret
		} 
		else if (InterruptSelect == TIMER1_Output_CompareA_Match_Interrupt_En)
    110a:	42 30       	cpi	r20, 0x02	; 2
    110c:	51 05       	cpc	r21, r1
    110e:	61 05       	cpc	r22, r1
    1110:	71 05       	cpc	r23, r1
    1112:	21 f4       	brne	.+8      	; 0x111c <Timer_SetINTERUPPT+0x2c>
		{
			set_bit(TIMSK,4);
    1114:	89 b7       	in	r24, 0x39	; 57
    1116:	80 61       	ori	r24, 0x10	; 16
    1118:	89 bf       	out	0x39, r24	; 57
    111a:	08 95       	ret
		}
		else if (InterruptSelect == TIMER1_Output_CompareB_Match_Interrupt_En)
    111c:	43 30       	cpi	r20, 0x03	; 3
    111e:	51 05       	cpc	r21, r1
    1120:	61 05       	cpc	r22, r1
    1122:	71 05       	cpc	r23, r1
    1124:	21 f4       	brne	.+8      	; 0x112e <Timer_SetINTERUPPT+0x3e>
		{
			set_bit(TIMSK,3);
    1126:	89 b7       	in	r24, 0x39	; 57
    1128:	88 60       	ori	r24, 0x08	; 8
    112a:	89 bf       	out	0x39, r24	; 57
    112c:	08 95       	ret
		}
		else if (InterruptSelect == TIMER1_Overflow_Interrupt_Enable)
    112e:	44 30       	cpi	r20, 0x04	; 4
    1130:	51 05       	cpc	r21, r1
    1132:	61 05       	cpc	r22, r1
    1134:	71 05       	cpc	r23, r1
    1136:	19 f4       	brne	.+6      	; 0x113e <Timer_SetINTERUPPT+0x4e>
		{
			set_bit(TIMSK,2);
    1138:	89 b7       	in	r24, 0x39	; 57
    113a:	84 60       	ori	r24, 0x04	; 4
    113c:	89 bf       	out	0x39, r24	; 57
    113e:	08 95       	ret

00001140 <Timer_SetRisingFallingEdge>:
	} 

}
void Timer_SetRisingFallingEdge(TimerControl* TimerC,Uint8 Rising_Falling)
{
	if (TimerC -> TimerSelect == TIMER1)
    1140:	fc 01       	movw	r30, r24
    1142:	80 81       	ld	r24, Z
    1144:	81 30       	cpi	r24, 0x01	; 1
    1146:	49 f4       	brne	.+18     	; 0x115a <Timer_SetRisingFallingEdge+0x1a>
	{
		if (Rising_Falling)
    1148:	66 23       	and	r22, r22
    114a:	21 f0       	breq	.+8      	; 0x1154 <Timer_SetRisingFallingEdge+0x14>
		{
			set_bit(TCCR1B,6);
    114c:	8e b5       	in	r24, 0x2e	; 46
    114e:	80 64       	ori	r24, 0x40	; 64
    1150:	8e bd       	out	0x2e, r24	; 46
    1152:	08 95       	ret
		}else
			clr_bit(TCCR1B,6);
    1154:	8e b5       	in	r24, 0x2e	; 46
    1156:	8f 7b       	andi	r24, 0xBF	; 191
    1158:	8e bd       	out	0x2e, r24	; 46
    115a:	08 95       	ret

0000115c <Timer_ClearFlage>:

}

void Timer_ClearFlage(TimerControl* TimerC,Uint8 Flag)
{
	if (TimerC -> TimerSelect == TIMER1)
    115c:	fc 01       	movw	r30, r24
    115e:	80 81       	ld	r24, Z
    1160:	81 30       	cpi	r24, 0x01	; 1
    1162:	59 f4       	brne	.+22     	; 0x117a <Timer_ClearFlage+0x1e>
	{
		if (Flag == TIMER_ICP_FALG)
    1164:	61 30       	cpi	r22, 0x01	; 1
    1166:	21 f4       	brne	.+8      	; 0x1170 <Timer_ClearFlage+0x14>
		{
			set_bit(TIFR ,5);
    1168:	88 b7       	in	r24, 0x38	; 56
    116a:	80 62       	ori	r24, 0x20	; 32
    116c:	88 bf       	out	0x38, r24	; 56
    116e:	08 95       	ret
		}
		else if (Flag == TIMER_OVERFLOW_FALG)
    1170:	62 30       	cpi	r22, 0x02	; 2
    1172:	19 f4       	brne	.+6      	; 0x117a <Timer_ClearFlage+0x1e>
		{
			set_bit(TIFR ,2);
    1174:	88 b7       	in	r24, 0x38	; 56
    1176:	84 60       	ori	r24, 0x04	; 4
    1178:	88 bf       	out	0x38, r24	; 56
    117a:	08 95       	ret

0000117c <UltraSonic_init>:

Uint8 TimerOverflow = 0;
TimerControl UltraSonicTimer;

void UltraSonic_init(void){
	UltraSonicTimer.TimerSelect = TIMER1;
    117c:	ec ee       	ldi	r30, 0xEC	; 236
    117e:	f0 e0       	ldi	r31, 0x00	; 0
    1180:	81 e0       	ldi	r24, 0x01	; 1
    1182:	80 83       	st	Z, r24
	UltraSonicTimer.TimerMode = TIMER_NORMAL_MODE;
    1184:	11 82       	std	Z+1, r1	; 0x01
	UltraSonicTimer.TimerPrescaler = TimerPrescaler_0;
    1186:	81 e0       	ldi	r24, 0x01	; 1
    1188:	90 e0       	ldi	r25, 0x00	; 0
    118a:	93 83       	std	Z+3, r25	; 0x03
    118c:	82 83       	std	Z+2, r24	; 0x02
	Timer_Init(&UltraSonicTimer);
    118e:	cf 01       	movw	r24, r30
    1190:	0e 94 8e 05 	call	0xb1c	; 0xb1c <Timer_Init>
	Timer_Start(&UltraSonicTimer);
    1194:	8c ee       	ldi	r24, 0xEC	; 236
    1196:	90 e0       	ldi	r25, 0x00	; 0
    1198:	0e 94 86 07 	call	0xf0c	; 0xf0c <Timer_Start>
	Timer_SetINTERUPPT(&UltraSonicTimer,TIMER1_Overflow_Interrupt_Enable);
    119c:	44 e0       	ldi	r20, 0x04	; 4
    119e:	50 e0       	ldi	r21, 0x00	; 0
    11a0:	60 e0       	ldi	r22, 0x00	; 0
    11a2:	70 e0       	ldi	r23, 0x00	; 0
    11a4:	8c ee       	ldi	r24, 0xEC	; 236
    11a6:	90 e0       	ldi	r25, 0x00	; 0
    11a8:	0e 94 78 08 	call	0x10f0	; 0x10f0 <Timer_SetINTERUPPT>
	Timer_SetINTERUPPT(&UltraSonicTimer,TIMER1_Input_Capture_Interrupt_En);
    11ac:	41 e0       	ldi	r20, 0x01	; 1
    11ae:	50 e0       	ldi	r21, 0x00	; 0
    11b0:	60 e0       	ldi	r22, 0x00	; 0
    11b2:	70 e0       	ldi	r23, 0x00	; 0
    11b4:	8c ee       	ldi	r24, 0xEC	; 236
    11b6:	90 e0       	ldi	r25, 0x00	; 0
    11b8:	0e 94 78 08 	call	0x10f0	; 0x10f0 <Timer_SetINTERUPPT>
	DIO_SetPinDir(TRIGER_PORT,TRIGER,DIO_PIN_DIR_OUTPUT);
    11bc:	41 e0       	ldi	r20, 0x01	; 1
    11be:	60 e0       	ldi	r22, 0x00	; 0
    11c0:	80 e0       	ldi	r24, 0x00	; 0
    11c2:	0e 94 72 00 	call	0xe4	; 0xe4 <DIO_SetPinDir>
// 	//DIO_SetPinDir(ECHO_PULLUP,ECHO,DIO_PIN_DIR_OUTPUT);
	DIO_SetPullUp(ECHO_PULLUP,ECHO);
    11c6:	66 e0       	ldi	r22, 0x06	; 6
    11c8:	83 e0       	ldi	r24, 0x03	; 3
    11ca:	0e 94 64 01 	call	0x2c8	; 0x2c8 <DIO_SetPullUp>
    11ce:	08 95       	ret

000011d0 <UltraSonic_SetCaptureEdge>:
	Timer_ClearFlage(&UltraSonicTimer,TIMER_OVERFLOW_FALG);
}

void UltraSonic_SetCaptureEdge(Uint8 Rising_Falling){
	
	Timer_SetRisingFallingEdge(&UltraSonicTimer,Rising_Falling);
    11d0:	68 2f       	mov	r22, r24
    11d2:	8c ee       	ldi	r24, 0xEC	; 236
    11d4:	90 e0       	ldi	r25, 0x00	; 0
    11d6:	0e 94 a0 08 	call	0x1140	; 0x1140 <Timer_SetRisingFallingEdge>
    11da:	08 95       	ret

000011dc <UltraSonic_triger>:
	DIO_SetPullUp(ECHO_PULLUP,ECHO);
}


void UltraSonic_triger(void){
	DIO_SetPinVal(TRIGER_PORT,TRIGER,DIO_PIN_HIGH);
    11dc:	41 e0       	ldi	r20, 0x01	; 1
    11de:	60 e0       	ldi	r22, 0x00	; 0
    11e0:	80 e0       	ldi	r24, 0x00	; 0
    11e2:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    11e6:	85 e3       	ldi	r24, 0x35	; 53
    11e8:	8a 95       	dec	r24
    11ea:	f1 f7       	brne	.-4      	; 0x11e8 <UltraSonic_triger+0xc>
    11ec:	00 00       	nop
	_delay_us(10);
	DIO_SetPinVal(TRIGER_PORT,TRIGER,DIO_PIN_LOW);
    11ee:	40 e0       	ldi	r20, 0x00	; 0
    11f0:	60 e0       	ldi	r22, 0x00	; 0
    11f2:	80 e0       	ldi	r24, 0x00	; 0
    11f4:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <DIO_SetPinVal>
	TCNT1 = 0;	/* Clear Timer counter */
    11f8:	1d bc       	out	0x2d, r1	; 45
    11fa:	1c bc       	out	0x2c, r1	; 44
	UltraSonic_SetCaptureEdge(TIMER_RISING_CAPTURE);
    11fc:	81 e0       	ldi	r24, 0x01	; 1
    11fe:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <UltraSonic_SetCaptureEdge>
	Timer_ClearFlage(&UltraSonicTimer,TIMER_ICP_FALG);
    1202:	61 e0       	ldi	r22, 0x01	; 1
    1204:	8c ee       	ldi	r24, 0xEC	; 236
    1206:	90 e0       	ldi	r25, 0x00	; 0
    1208:	0e 94 ae 08 	call	0x115c	; 0x115c <Timer_ClearFlage>
	Timer_ClearFlage(&UltraSonicTimer,TIMER_OVERFLOW_FALG);
    120c:	62 e0       	ldi	r22, 0x02	; 2
    120e:	8c ee       	ldi	r24, 0xEC	; 236
    1210:	90 e0       	ldi	r25, 0x00	; 0
    1212:	0e 94 ae 08 	call	0x115c	; 0x115c <Timer_ClearFlage>
    1216:	08 95       	ret

00001218 <UltraSonic_Distance>:

Uint8 UltraSonic_Distance(void)
{
	long count;
	Uint8 distance;
	UltraSonic_triger();
    1218:	0e 94 ee 08 	call	0x11dc	; 0x11dc <UltraSonic_triger>
	for (int x = 0;x<= 10000;x++)
    121c:	80 e0       	ldi	r24, 0x00	; 0
    121e:	90 e0       	ldi	r25, 0x00	; 0
    1220:	24 c0       	rjmp	.+72     	; 0x126a <UltraSonic_Distance+0x52>
	{
		if (!((TIFR & (1 << 5)) == 0))
    1222:	08 b6       	in	r0, 0x38	; 56
    1224:	05 fe       	sbrs	r0, 5
    1226:	20 c0       	rjmp	.+64     	; 0x1268 <UltraSonic_Distance+0x50>
		{
			TCNT1 = 0;	/* Clear Timer counter */
    1228:	1d bc       	out	0x2d, r1	; 45
    122a:	1c bc       	out	0x2c, r1	; 44
			UltraSonic_SetCaptureEdge(TIMER_FALLING_CAPTURE);
    122c:	80 e0       	ldi	r24, 0x00	; 0
    122e:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <UltraSonic_SetCaptureEdge>
			Timer_ClearFlage(&UltraSonicTimer,TIMER_ICP_FALG);
    1232:	61 e0       	ldi	r22, 0x01	; 1
    1234:	8c ee       	ldi	r24, 0xEC	; 236
    1236:	90 e0       	ldi	r25, 0x00	; 0
    1238:	0e 94 ae 08 	call	0x115c	; 0x115c <Timer_ClearFlage>
			Timer_ClearFlage(&UltraSonicTimer,TIMER_OVERFLOW_FALG);
    123c:	62 e0       	ldi	r22, 0x02	; 2
    123e:	8c ee       	ldi	r24, 0xEC	; 236
    1240:	90 e0       	ldi	r25, 0x00	; 0
    1242:	0e 94 ae 08 	call	0x115c	; 0x115c <Timer_ClearFlage>
			TimerOverflow = 0;/* Clear Timer overflow count */
    1246:	10 92 d6 00 	sts	0x00D6, r1	; 0x8000d6 <__data_end>
			while(((TIFR & (1 << 5)) == 0));
    124a:	08 b6       	in	r0, 0x38	; 56
    124c:	05 fe       	sbrs	r0, 5
    124e:	fd cf       	rjmp	.-6      	; 0x124a <UltraSonic_Distance+0x32>
			count = ICR1 + (65535 * TimerOverflow);	/* Take count */
    1250:	66 b5       	in	r22, 0x26	; 38
    1252:	77 b5       	in	r23, 0x27	; 39
    1254:	80 e0       	ldi	r24, 0x00	; 0
    1256:	90 e0       	ldi	r25, 0x00	; 0
			/* 16MHz Timer freq, sound speed =343 m/s */
			distance = count / 933;
    1258:	25 ea       	ldi	r18, 0xA5	; 165
    125a:	33 e0       	ldi	r19, 0x03	; 3
    125c:	40 e0       	ldi	r20, 0x00	; 0
    125e:	50 e0       	ldi	r21, 0x00	; 0
    1260:	0e 94 96 09 	call	0x132c	; 0x132c <__divmodsi4>
			return distance;
    1264:	82 2f       	mov	r24, r18
    1266:	08 95       	ret
Uint8 UltraSonic_Distance(void)
{
	long count;
	Uint8 distance;
	UltraSonic_triger();
	for (int x = 0;x<= 10000;x++)
    1268:	01 96       	adiw	r24, 0x01	; 1
    126a:	81 31       	cpi	r24, 0x11	; 17
    126c:	27 e2       	ldi	r18, 0x27	; 39
    126e:	92 07       	cpc	r25, r18
    1270:	c4 f2       	brlt	.-80     	; 0x1222 <UltraSonic_Distance+0xa>
			return distance;
		}
	}
	
	
	return 30;
    1272:	8e e1       	ldi	r24, 0x1E	; 30
}
    1274:	08 95       	ret

00001276 <__vector_9>:

ISR(TIMER1_OVF_vect)
{
    1276:	1f 92       	push	r1
    1278:	0f 92       	push	r0
    127a:	0f b6       	in	r0, 0x3f	; 63
    127c:	0f 92       	push	r0
    127e:	11 24       	eor	r1, r1
    1280:	8f 93       	push	r24
	TimerOverflow++;	/* Increment Timer Overflow count */
    1282:	80 91 d6 00 	lds	r24, 0x00D6	; 0x8000d6 <__data_end>
    1286:	8f 5f       	subi	r24, 0xFF	; 255
    1288:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <__data_end>
	
}
    128c:	8f 91       	pop	r24
    128e:	0f 90       	pop	r0
    1290:	0f be       	out	0x3f, r0	; 63
    1292:	0f 90       	pop	r0
    1294:	1f 90       	pop	r1
    1296:	18 95       	reti

00001298 <__udivmodhi4>:
    1298:	aa 1b       	sub	r26, r26
    129a:	bb 1b       	sub	r27, r27
    129c:	51 e1       	ldi	r21, 0x11	; 17
    129e:	07 c0       	rjmp	.+14     	; 0x12ae <__udivmodhi4_ep>

000012a0 <__udivmodhi4_loop>:
    12a0:	aa 1f       	adc	r26, r26
    12a2:	bb 1f       	adc	r27, r27
    12a4:	a6 17       	cp	r26, r22
    12a6:	b7 07       	cpc	r27, r23
    12a8:	10 f0       	brcs	.+4      	; 0x12ae <__udivmodhi4_ep>
    12aa:	a6 1b       	sub	r26, r22
    12ac:	b7 0b       	sbc	r27, r23

000012ae <__udivmodhi4_ep>:
    12ae:	88 1f       	adc	r24, r24
    12b0:	99 1f       	adc	r25, r25
    12b2:	5a 95       	dec	r21
    12b4:	a9 f7       	brne	.-22     	; 0x12a0 <__udivmodhi4_loop>
    12b6:	80 95       	com	r24
    12b8:	90 95       	com	r25
    12ba:	bc 01       	movw	r22, r24
    12bc:	cd 01       	movw	r24, r26
    12be:	08 95       	ret

000012c0 <__divmodhi4>:
    12c0:	97 fb       	bst	r25, 7
    12c2:	07 2e       	mov	r0, r23
    12c4:	16 f4       	brtc	.+4      	; 0x12ca <__divmodhi4+0xa>
    12c6:	00 94       	com	r0
    12c8:	07 d0       	rcall	.+14     	; 0x12d8 <__divmodhi4_neg1>
    12ca:	77 fd       	sbrc	r23, 7
    12cc:	09 d0       	rcall	.+18     	; 0x12e0 <__divmodhi4_neg2>
    12ce:	0e 94 4c 09 	call	0x1298	; 0x1298 <__udivmodhi4>
    12d2:	07 fc       	sbrc	r0, 7
    12d4:	05 d0       	rcall	.+10     	; 0x12e0 <__divmodhi4_neg2>
    12d6:	3e f4       	brtc	.+14     	; 0x12e6 <__divmodhi4_exit>

000012d8 <__divmodhi4_neg1>:
    12d8:	90 95       	com	r25
    12da:	81 95       	neg	r24
    12dc:	9f 4f       	sbci	r25, 0xFF	; 255
    12de:	08 95       	ret

000012e0 <__divmodhi4_neg2>:
    12e0:	70 95       	com	r23
    12e2:	61 95       	neg	r22
    12e4:	7f 4f       	sbci	r23, 0xFF	; 255

000012e6 <__divmodhi4_exit>:
    12e6:	08 95       	ret

000012e8 <__udivmodsi4>:
    12e8:	a1 e2       	ldi	r26, 0x21	; 33
    12ea:	1a 2e       	mov	r1, r26
    12ec:	aa 1b       	sub	r26, r26
    12ee:	bb 1b       	sub	r27, r27
    12f0:	fd 01       	movw	r30, r26
    12f2:	0d c0       	rjmp	.+26     	; 0x130e <__udivmodsi4_ep>

000012f4 <__udivmodsi4_loop>:
    12f4:	aa 1f       	adc	r26, r26
    12f6:	bb 1f       	adc	r27, r27
    12f8:	ee 1f       	adc	r30, r30
    12fa:	ff 1f       	adc	r31, r31
    12fc:	a2 17       	cp	r26, r18
    12fe:	b3 07       	cpc	r27, r19
    1300:	e4 07       	cpc	r30, r20
    1302:	f5 07       	cpc	r31, r21
    1304:	20 f0       	brcs	.+8      	; 0x130e <__udivmodsi4_ep>
    1306:	a2 1b       	sub	r26, r18
    1308:	b3 0b       	sbc	r27, r19
    130a:	e4 0b       	sbc	r30, r20
    130c:	f5 0b       	sbc	r31, r21

0000130e <__udivmodsi4_ep>:
    130e:	66 1f       	adc	r22, r22
    1310:	77 1f       	adc	r23, r23
    1312:	88 1f       	adc	r24, r24
    1314:	99 1f       	adc	r25, r25
    1316:	1a 94       	dec	r1
    1318:	69 f7       	brne	.-38     	; 0x12f4 <__udivmodsi4_loop>
    131a:	60 95       	com	r22
    131c:	70 95       	com	r23
    131e:	80 95       	com	r24
    1320:	90 95       	com	r25
    1322:	9b 01       	movw	r18, r22
    1324:	ac 01       	movw	r20, r24
    1326:	bd 01       	movw	r22, r26
    1328:	cf 01       	movw	r24, r30
    132a:	08 95       	ret

0000132c <__divmodsi4>:
    132c:	05 2e       	mov	r0, r21
    132e:	97 fb       	bst	r25, 7
    1330:	1e f4       	brtc	.+6      	; 0x1338 <__divmodsi4+0xc>
    1332:	00 94       	com	r0
    1334:	0e 94 ad 09 	call	0x135a	; 0x135a <__negsi2>
    1338:	57 fd       	sbrc	r21, 7
    133a:	07 d0       	rcall	.+14     	; 0x134a <__divmodsi4_neg2>
    133c:	0e 94 74 09 	call	0x12e8	; 0x12e8 <__udivmodsi4>
    1340:	07 fc       	sbrc	r0, 7
    1342:	03 d0       	rcall	.+6      	; 0x134a <__divmodsi4_neg2>
    1344:	4e f4       	brtc	.+18     	; 0x1358 <__divmodsi4_exit>
    1346:	0c 94 ad 09 	jmp	0x135a	; 0x135a <__negsi2>

0000134a <__divmodsi4_neg2>:
    134a:	50 95       	com	r21
    134c:	40 95       	com	r20
    134e:	30 95       	com	r19
    1350:	21 95       	neg	r18
    1352:	3f 4f       	sbci	r19, 0xFF	; 255
    1354:	4f 4f       	sbci	r20, 0xFF	; 255
    1356:	5f 4f       	sbci	r21, 0xFF	; 255

00001358 <__divmodsi4_exit>:
    1358:	08 95       	ret

0000135a <__negsi2>:
    135a:	90 95       	com	r25
    135c:	80 95       	com	r24
    135e:	70 95       	com	r23
    1360:	61 95       	neg	r22
    1362:	7f 4f       	sbci	r23, 0xFF	; 255
    1364:	8f 4f       	sbci	r24, 0xFF	; 255
    1366:	9f 4f       	sbci	r25, 0xFF	; 255
    1368:	08 95       	ret

0000136a <_exit>:
    136a:	f8 94       	cli

0000136c <__stop_program>:
    136c:	ff cf       	rjmp	.-2      	; 0x136c <__stop_program>
